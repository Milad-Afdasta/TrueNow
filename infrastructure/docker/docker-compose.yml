version: '3.8'

services:
  # PostgreSQL for Control Plane
  postgres:
    image: postgres:14-alpine
    container_name: flow-postgres
    environment:
      POSTGRES_DB: analytics
      POSTGRES_USER: analytics
      POSTGRES_PASSWORD: analytics123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U analytics"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redpanda (Kafka-compatible streaming platform)
  redpanda:
    image: vectorized/redpanda:latest
    container_name: flow-redpanda
    command:
      - redpanda
      - start
      - --smp
      - '2'
      - --memory
      - '2G'
      - --reserve-memory
      - '0M'
      - --overprovisioned
      - --node-id
      - '0'
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr
      - PLAINTEXT://redpanda:29092,OUTSIDE://localhost:9092
      - --pandaproxy-addr
      - PLAINTEXT://0.0.0.0:28082,OUTSIDE://0.0.0.0:8082
      - --advertise-pandaproxy-addr
      - PLAINTEXT://redpanda:28082,OUTSIDE://localhost:8082
      - --schema-registry-addr
      - PLAINTEXT://0.0.0.0:28081,OUTSIDE://0.0.0.0:8081
      - --advertise-schema-registry-addr
      - PLAINTEXT://redpanda:28081,OUTSIDE://localhost:8081
    ports:
      - "9092:9092"
      - "8081:8081"
      - "8082:8082"
      - "9644:9644"
    volumes:
      - redpanda_data:/var/lib/redpanda/data
    healthcheck:
      test: ["CMD-SHELL", "rpk cluster health | grep -E 'Healthy:.*true' || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    container_name: flow-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO for object storage (snapshots)
  minio:
    image: minio/minio:latest
    container_name: flow-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: flow-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    depends_on:
      - postgres
      - redpanda

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: flow-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus

  # Jaeger for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: flow-jaeger
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"

  # Redpanda Console for Kafka UI
  redpanda-console:
    image: vectorized/console:latest
    container_name: flow-redpanda-console
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
    ports:
      - "8080:8080"
    volumes:
      - ./redpanda-console-config.yml:/tmp/config.yml
    depends_on:
      - redpanda

volumes:
  postgres_data:
  redpanda_data:
  redis_data:
  minio_data:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: flow-network
    driver: bridge