// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.3
// source: hot_tier.proto

package hottier

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Record represents a single event/record
type Record struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	EventTimeMs   int64                  `protobuf:"varint,2,opt,name=event_time_ms,json=eventTimeMs,proto3" json:"event_time_ms,omitempty"`
	GroupKey      string                 `protobuf:"bytes,3,opt,name=group_key,json=groupKey,proto3" json:"group_key,omitempty"`
	Metrics       []float64              `protobuf:"fixed64,4,rep,packed,name=metrics,proto3" json:"metrics,omitempty"`
	Revision      int32                  `protobuf:"varint,5,opt,name=revision,proto3" json:"revision,omitempty"`
	Dimensions    map[string]string      `protobuf:"bytes,6,rep,name=dimensions,proto3" json:"dimensions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Record) Reset() {
	*x = Record{}
	mi := &file_hot_tier_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Record) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Record) ProtoMessage() {}

func (x *Record) ProtoReflect() protoreflect.Message {
	mi := &file_hot_tier_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Record.ProtoReflect.Descriptor instead.
func (*Record) Descriptor() ([]byte, []int) {
	return file_hot_tier_proto_rawDescGZIP(), []int{0}
}

func (x *Record) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *Record) GetEventTimeMs() int64 {
	if x != nil {
		return x.EventTimeMs
	}
	return 0
}

func (x *Record) GetGroupKey() string {
	if x != nil {
		return x.GroupKey
	}
	return ""
}

func (x *Record) GetMetrics() []float64 {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *Record) GetRevision() int32 {
	if x != nil {
		return x.Revision
	}
	return 0
}

func (x *Record) GetDimensions() map[string]string {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

// Request to apply a batch of records
type ApplyBatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Records       []*Record              `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	Epoch         int64                  `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Namespace     string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Table         string                 `protobuf:"bytes,4,opt,name=table,proto3" json:"table,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApplyBatchRequest) Reset() {
	*x = ApplyBatchRequest{}
	mi := &file_hot_tier_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplyBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyBatchRequest) ProtoMessage() {}

func (x *ApplyBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hot_tier_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyBatchRequest.ProtoReflect.Descriptor instead.
func (*ApplyBatchRequest) Descriptor() ([]byte, []int) {
	return file_hot_tier_proto_rawDescGZIP(), []int{1}
}

func (x *ApplyBatchRequest) GetRecords() []*Record {
	if x != nil {
		return x.Records
	}
	return nil
}

func (x *ApplyBatchRequest) GetEpoch() int64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *ApplyBatchRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ApplyBatchRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

// Response from applying a batch
type ApplyBatchResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	AppliedCount     int32                  `protobuf:"varint,1,opt,name=applied_count,json=appliedCount,proto3" json:"applied_count,omitempty"`
	DedupedCount     int32                  `protobuf:"varint,2,opt,name=deduped_count,json=dedupedCount,proto3" json:"deduped_count,omitempty"`
	RejectedCount    int32                  `protobuf:"varint,3,opt,name=rejected_count,json=rejectedCount,proto3" json:"rejected_count,omitempty"`
	CurrentEpoch     int64                  `protobuf:"varint,4,opt,name=current_epoch,json=currentEpoch,proto3" json:"current_epoch,omitempty"`
	WatermarkMs      int64                  `protobuf:"varint,5,opt,name=watermark_ms,json=watermarkMs,proto3" json:"watermark_ms,omitempty"`
	ProcessingTimeMs int32                  `protobuf:"varint,6,opt,name=processing_time_ms,json=processingTimeMs,proto3" json:"processing_time_ms,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ApplyBatchResponse) Reset() {
	*x = ApplyBatchResponse{}
	mi := &file_hot_tier_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplyBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyBatchResponse) ProtoMessage() {}

func (x *ApplyBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hot_tier_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyBatchResponse.ProtoReflect.Descriptor instead.
func (*ApplyBatchResponse) Descriptor() ([]byte, []int) {
	return file_hot_tier_proto_rawDescGZIP(), []int{2}
}

func (x *ApplyBatchResponse) GetAppliedCount() int32 {
	if x != nil {
		return x.AppliedCount
	}
	return 0
}

func (x *ApplyBatchResponse) GetDedupedCount() int32 {
	if x != nil {
		return x.DedupedCount
	}
	return 0
}

func (x *ApplyBatchResponse) GetRejectedCount() int32 {
	if x != nil {
		return x.RejectedCount
	}
	return 0
}

func (x *ApplyBatchResponse) GetCurrentEpoch() int64 {
	if x != nil {
		return x.CurrentEpoch
	}
	return 0
}

func (x *ApplyBatchResponse) GetWatermarkMs() int64 {
	if x != nil {
		return x.WatermarkMs
	}
	return 0
}

func (x *ApplyBatchResponse) GetProcessingTimeMs() int32 {
	if x != nil {
		return x.ProcessingTimeMs
	}
	return 0
}

// Query request
type QueryRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	StartMs            int64                  `protobuf:"varint,1,opt,name=start_ms,json=startMs,proto3" json:"start_ms,omitempty"`
	EndMs              int64                  `protobuf:"varint,2,opt,name=end_ms,json=endMs,proto3" json:"end_ms,omitempty"`
	Namespace          string                 `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Table              string                 `protobuf:"bytes,4,opt,name=table,proto3" json:"table,omitempty"`
	GroupBy            string                 `protobuf:"bytes,5,opt,name=group_by,json=groupBy,proto3" json:"group_by,omitempty"`
	Filters            []string               `protobuf:"bytes,6,rep,name=filters,proto3" json:"filters,omitempty"`
	Metrics            []string               `protobuf:"bytes,7,rep,name=metrics,proto3" json:"metrics,omitempty"`
	IncludeUniques     bool                   `protobuf:"varint,8,opt,name=include_uniques,json=includeUniques,proto3" json:"include_uniques,omitempty"`
	IncludePercentiles bool                   `protobuf:"varint,9,opt,name=include_percentiles,json=includePercentiles,proto3" json:"include_percentiles,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *QueryRequest) Reset() {
	*x = QueryRequest{}
	mi := &file_hot_tier_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest) ProtoMessage() {}

func (x *QueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hot_tier_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest.ProtoReflect.Descriptor instead.
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return file_hot_tier_proto_rawDescGZIP(), []int{3}
}

func (x *QueryRequest) GetStartMs() int64 {
	if x != nil {
		return x.StartMs
	}
	return 0
}

func (x *QueryRequest) GetEndMs() int64 {
	if x != nil {
		return x.EndMs
	}
	return 0
}

func (x *QueryRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *QueryRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *QueryRequest) GetGroupBy() string {
	if x != nil {
		return x.GroupBy
	}
	return ""
}

func (x *QueryRequest) GetFilters() []string {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *QueryRequest) GetMetrics() []string {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *QueryRequest) GetIncludeUniques() bool {
	if x != nil {
		return x.IncludeUniques
	}
	return false
}

func (x *QueryRequest) GetIncludePercentiles() bool {
	if x != nil {
		return x.IncludePercentiles
	}
	return false
}

// Aggregated result
type AggregateResult struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	TimestampMs int64                  `protobuf:"varint,1,opt,name=timestamp_ms,json=timestampMs,proto3" json:"timestamp_ms,omitempty"`
	GroupKey    string                 `protobuf:"bytes,2,opt,name=group_key,json=groupKey,proto3" json:"group_key,omitempty"`
	Sum         float64                `protobuf:"fixed64,3,opt,name=sum,proto3" json:"sum,omitempty"`
	Count       int64                  `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	Min         float64                `protobuf:"fixed64,5,opt,name=min,proto3" json:"min,omitempty"`
	Max         float64                `protobuf:"fixed64,6,opt,name=max,proto3" json:"max,omitempty"`
	Avg         float64                `protobuf:"fixed64,7,opt,name=avg,proto3" json:"avg,omitempty"`
	// Optional sketch results
	UniqueCount   int64    `protobuf:"varint,8,opt,name=unique_count,json=uniqueCount,proto3" json:"unique_count,omitempty"`
	P50           float64  `protobuf:"fixed64,9,opt,name=p50,proto3" json:"p50,omitempty"`
	P95           float64  `protobuf:"fixed64,10,opt,name=p95,proto3" json:"p95,omitempty"`
	P99           float64  `protobuf:"fixed64,11,opt,name=p99,proto3" json:"p99,omitempty"`
	TopK          []string `protobuf:"bytes,12,rep,name=top_k,json=topK,proto3" json:"top_k,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AggregateResult) Reset() {
	*x = AggregateResult{}
	mi := &file_hot_tier_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregateResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregateResult) ProtoMessage() {}

func (x *AggregateResult) ProtoReflect() protoreflect.Message {
	mi := &file_hot_tier_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregateResult.ProtoReflect.Descriptor instead.
func (*AggregateResult) Descriptor() ([]byte, []int) {
	return file_hot_tier_proto_rawDescGZIP(), []int{4}
}

func (x *AggregateResult) GetTimestampMs() int64 {
	if x != nil {
		return x.TimestampMs
	}
	return 0
}

func (x *AggregateResult) GetGroupKey() string {
	if x != nil {
		return x.GroupKey
	}
	return ""
}

func (x *AggregateResult) GetSum() float64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

func (x *AggregateResult) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *AggregateResult) GetMin() float64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *AggregateResult) GetMax() float64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *AggregateResult) GetAvg() float64 {
	if x != nil {
		return x.Avg
	}
	return 0
}

func (x *AggregateResult) GetUniqueCount() int64 {
	if x != nil {
		return x.UniqueCount
	}
	return 0
}

func (x *AggregateResult) GetP50() float64 {
	if x != nil {
		return x.P50
	}
	return 0
}

func (x *AggregateResult) GetP95() float64 {
	if x != nil {
		return x.P95
	}
	return 0
}

func (x *AggregateResult) GetP99() float64 {
	if x != nil {
		return x.P99
	}
	return 0
}

func (x *AggregateResult) GetTopK() []string {
	if x != nil {
		return x.TopK
	}
	return nil
}

// Query response
type QueryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*AggregateResult     `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	WatermarkMs   int64                  `protobuf:"varint,2,opt,name=watermark_ms,json=watermarkMs,proto3" json:"watermark_ms,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryResponse) Reset() {
	*x = QueryResponse{}
	mi := &file_hot_tier_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResponse) ProtoMessage() {}

func (x *QueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hot_tier_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResponse.ProtoReflect.Descriptor instead.
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return file_hot_tier_proto_rawDescGZIP(), []int{5}
}

func (x *QueryResponse) GetResults() []*AggregateResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *QueryResponse) GetWatermarkMs() int64 {
	if x != nil {
		return x.WatermarkMs
	}
	return 0
}

func (x *QueryResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Request for statistics
type GetStatsRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	IncludeBufferStats bool                   `protobuf:"varint,1,opt,name=include_buffer_stats,json=includeBufferStats,proto3" json:"include_buffer_stats,omitempty"`
	IncludeMemoryStats bool                   `protobuf:"varint,2,opt,name=include_memory_stats,json=includeMemoryStats,proto3" json:"include_memory_stats,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetStatsRequest) Reset() {
	*x = GetStatsRequest{}
	mi := &file_hot_tier_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatsRequest) ProtoMessage() {}

func (x *GetStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hot_tier_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatsRequest.ProtoReflect.Descriptor instead.
func (*GetStatsRequest) Descriptor() ([]byte, []int) {
	return file_hot_tier_proto_rawDescGZIP(), []int{6}
}

func (x *GetStatsRequest) GetIncludeBufferStats() bool {
	if x != nil {
		return x.IncludeBufferStats
	}
	return false
}

func (x *GetStatsRequest) GetIncludeMemoryStats() bool {
	if x != nil {
		return x.IncludeMemoryStats
	}
	return false
}

// Buffer statistics
type BufferStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SlotsUsed     int64                  `protobuf:"varint,1,opt,name=slots_used,json=slotsUsed,proto3" json:"slots_used,omitempty"`
	TotalSlots    int64                  `protobuf:"varint,2,opt,name=total_slots,json=totalSlots,proto3" json:"total_slots,omitempty"`
	WritesTotal   int64                  `protobuf:"varint,3,opt,name=writes_total,json=writesTotal,proto3" json:"writes_total,omitempty"`
	ReadsTotal    int64                  `protobuf:"varint,4,opt,name=reads_total,json=readsTotal,proto3" json:"reads_total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BufferStats) Reset() {
	*x = BufferStats{}
	mi := &file_hot_tier_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BufferStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BufferStats) ProtoMessage() {}

func (x *BufferStats) ProtoReflect() protoreflect.Message {
	mi := &file_hot_tier_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BufferStats.ProtoReflect.Descriptor instead.
func (*BufferStats) Descriptor() ([]byte, []int) {
	return file_hot_tier_proto_rawDescGZIP(), []int{7}
}

func (x *BufferStats) GetSlotsUsed() int64 {
	if x != nil {
		return x.SlotsUsed
	}
	return 0
}

func (x *BufferStats) GetTotalSlots() int64 {
	if x != nil {
		return x.TotalSlots
	}
	return 0
}

func (x *BufferStats) GetWritesTotal() int64 {
	if x != nil {
		return x.WritesTotal
	}
	return 0
}

func (x *BufferStats) GetReadsTotal() int64 {
	if x != nil {
		return x.ReadsTotal
	}
	return 0
}

// Memory statistics
type MemoryStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AllocBytes    int64                  `protobuf:"varint,1,opt,name=alloc_bytes,json=allocBytes,proto3" json:"alloc_bytes,omitempty"`
	SysBytes      int64                  `protobuf:"varint,2,opt,name=sys_bytes,json=sysBytes,proto3" json:"sys_bytes,omitempty"`
	GcRuns        int32                  `protobuf:"varint,3,opt,name=gc_runs,json=gcRuns,proto3" json:"gc_runs,omitempty"`
	HeapObjects   int64                  `protobuf:"varint,4,opt,name=heap_objects,json=heapObjects,proto3" json:"heap_objects,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MemoryStats) Reset() {
	*x = MemoryStats{}
	mi := &file_hot_tier_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MemoryStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryStats) ProtoMessage() {}

func (x *MemoryStats) ProtoReflect() protoreflect.Message {
	mi := &file_hot_tier_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryStats.ProtoReflect.Descriptor instead.
func (*MemoryStats) Descriptor() ([]byte, []int) {
	return file_hot_tier_proto_rawDescGZIP(), []int{8}
}

func (x *MemoryStats) GetAllocBytes() int64 {
	if x != nil {
		return x.AllocBytes
	}
	return 0
}

func (x *MemoryStats) GetSysBytes() int64 {
	if x != nil {
		return x.SysBytes
	}
	return 0
}

func (x *MemoryStats) GetGcRuns() int32 {
	if x != nil {
		return x.GcRuns
	}
	return 0
}

func (x *MemoryStats) GetHeapObjects() int64 {
	if x != nil {
		return x.HeapObjects
	}
	return 0
}

// Statistics response
type GetStatsResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	EventsProcessed int64                  `protobuf:"varint,1,opt,name=events_processed,json=eventsProcessed,proto3" json:"events_processed,omitempty"`
	EventsDeduped   int64                  `protobuf:"varint,2,opt,name=events_deduped,json=eventsDeduped,proto3" json:"events_deduped,omitempty"`
	BytesProcessed  int64                  `protobuf:"varint,3,opt,name=bytes_processed,json=bytesProcessed,proto3" json:"bytes_processed,omitempty"`
	ShardId         int32                  `protobuf:"varint,4,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	NumaNode        int32                  `protobuf:"varint,5,opt,name=numa_node,json=numaNode,proto3" json:"numa_node,omitempty"`
	Buffer_1S       *BufferStats           `protobuf:"bytes,6,opt,name=buffer_1s,json=buffer1s,proto3" json:"buffer_1s,omitempty"`
	Buffer_10S      *BufferStats           `protobuf:"bytes,7,opt,name=buffer_10s,json=buffer10s,proto3" json:"buffer_10s,omitempty"`
	Buffer_1M       *BufferStats           `protobuf:"bytes,8,opt,name=buffer_1m,json=buffer1m,proto3" json:"buffer_1m,omitempty"`
	Memory          *MemoryStats           `protobuf:"bytes,9,opt,name=memory,proto3" json:"memory,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetStatsResponse) Reset() {
	*x = GetStatsResponse{}
	mi := &file_hot_tier_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatsResponse) ProtoMessage() {}

func (x *GetStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hot_tier_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatsResponse.ProtoReflect.Descriptor instead.
func (*GetStatsResponse) Descriptor() ([]byte, []int) {
	return file_hot_tier_proto_rawDescGZIP(), []int{9}
}

func (x *GetStatsResponse) GetEventsProcessed() int64 {
	if x != nil {
		return x.EventsProcessed
	}
	return 0
}

func (x *GetStatsResponse) GetEventsDeduped() int64 {
	if x != nil {
		return x.EventsDeduped
	}
	return 0
}

func (x *GetStatsResponse) GetBytesProcessed() int64 {
	if x != nil {
		return x.BytesProcessed
	}
	return 0
}

func (x *GetStatsResponse) GetShardId() int32 {
	if x != nil {
		return x.ShardId
	}
	return 0
}

func (x *GetStatsResponse) GetNumaNode() int32 {
	if x != nil {
		return x.NumaNode
	}
	return 0
}

func (x *GetStatsResponse) GetBuffer_1S() *BufferStats {
	if x != nil {
		return x.Buffer_1S
	}
	return nil
}

func (x *GetStatsResponse) GetBuffer_10S() *BufferStats {
	if x != nil {
		return x.Buffer_10S
	}
	return nil
}

func (x *GetStatsResponse) GetBuffer_1M() *BufferStats {
	if x != nil {
		return x.Buffer_1M
	}
	return nil
}

func (x *GetStatsResponse) GetMemory() *MemoryStats {
	if x != nil {
		return x.Memory
	}
	return nil
}

var File_hot_tier_proto protoreflect.FileDescriptor

const file_hot_tier_proto_rawDesc = "" +
	"\n" +
	"\x0ehot_tier.proto\x12\ahottier\x1a\x1fgoogle/protobuf/timestamp.proto\"\x9a\x02\n" +
	"\x06Record\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12\"\n" +
	"\revent_time_ms\x18\x02 \x01(\x03R\veventTimeMs\x12\x1b\n" +
	"\tgroup_key\x18\x03 \x01(\tR\bgroupKey\x12\x18\n" +
	"\ametrics\x18\x04 \x03(\x01R\ametrics\x12\x1a\n" +
	"\brevision\x18\x05 \x01(\x05R\brevision\x12?\n" +
	"\n" +
	"dimensions\x18\x06 \x03(\v2\x1f.hottier.Record.DimensionsEntryR\n" +
	"dimensions\x1a=\n" +
	"\x0fDimensionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x88\x01\n" +
	"\x11ApplyBatchRequest\x12)\n" +
	"\arecords\x18\x01 \x03(\v2\x0f.hottier.RecordR\arecords\x12\x14\n" +
	"\x05epoch\x18\x02 \x01(\x03R\x05epoch\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x14\n" +
	"\x05table\x18\x04 \x01(\tR\x05table\"\xfb\x01\n" +
	"\x12ApplyBatchResponse\x12#\n" +
	"\rapplied_count\x18\x01 \x01(\x05R\fappliedCount\x12#\n" +
	"\rdeduped_count\x18\x02 \x01(\x05R\fdedupedCount\x12%\n" +
	"\x0erejected_count\x18\x03 \x01(\x05R\rrejectedCount\x12#\n" +
	"\rcurrent_epoch\x18\x04 \x01(\x03R\fcurrentEpoch\x12!\n" +
	"\fwatermark_ms\x18\x05 \x01(\x03R\vwatermarkMs\x12,\n" +
	"\x12processing_time_ms\x18\x06 \x01(\x05R\x10processingTimeMs\"\x9d\x02\n" +
	"\fQueryRequest\x12\x19\n" +
	"\bstart_ms\x18\x01 \x01(\x03R\astartMs\x12\x15\n" +
	"\x06end_ms\x18\x02 \x01(\x03R\x05endMs\x12\x1c\n" +
	"\tnamespace\x18\x03 \x01(\tR\tnamespace\x12\x14\n" +
	"\x05table\x18\x04 \x01(\tR\x05table\x12\x19\n" +
	"\bgroup_by\x18\x05 \x01(\tR\agroupBy\x12\x18\n" +
	"\afilters\x18\x06 \x03(\tR\afilters\x12\x18\n" +
	"\ametrics\x18\a \x03(\tR\ametrics\x12'\n" +
	"\x0finclude_uniques\x18\b \x01(\bR\x0eincludeUniques\x12/\n" +
	"\x13include_percentiles\x18\t \x01(\bR\x12includePercentiles\"\x9d\x02\n" +
	"\x0fAggregateResult\x12!\n" +
	"\ftimestamp_ms\x18\x01 \x01(\x03R\vtimestampMs\x12\x1b\n" +
	"\tgroup_key\x18\x02 \x01(\tR\bgroupKey\x12\x10\n" +
	"\x03sum\x18\x03 \x01(\x01R\x03sum\x12\x14\n" +
	"\x05count\x18\x04 \x01(\x03R\x05count\x12\x10\n" +
	"\x03min\x18\x05 \x01(\x01R\x03min\x12\x10\n" +
	"\x03max\x18\x06 \x01(\x01R\x03max\x12\x10\n" +
	"\x03avg\x18\a \x01(\x01R\x03avg\x12!\n" +
	"\funique_count\x18\b \x01(\x03R\vuniqueCount\x12\x10\n" +
	"\x03p50\x18\t \x01(\x01R\x03p50\x12\x10\n" +
	"\x03p95\x18\n" +
	" \x01(\x01R\x03p95\x12\x10\n" +
	"\x03p99\x18\v \x01(\x01R\x03p99\x12\x13\n" +
	"\x05top_k\x18\f \x03(\tR\x04topK\"|\n" +
	"\rQueryResponse\x122\n" +
	"\aresults\x18\x01 \x03(\v2\x18.hottier.AggregateResultR\aresults\x12!\n" +
	"\fwatermark_ms\x18\x02 \x01(\x03R\vwatermarkMs\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"u\n" +
	"\x0fGetStatsRequest\x120\n" +
	"\x14include_buffer_stats\x18\x01 \x01(\bR\x12includeBufferStats\x120\n" +
	"\x14include_memory_stats\x18\x02 \x01(\bR\x12includeMemoryStats\"\x91\x01\n" +
	"\vBufferStats\x12\x1d\n" +
	"\n" +
	"slots_used\x18\x01 \x01(\x03R\tslotsUsed\x12\x1f\n" +
	"\vtotal_slots\x18\x02 \x01(\x03R\n" +
	"totalSlots\x12!\n" +
	"\fwrites_total\x18\x03 \x01(\x03R\vwritesTotal\x12\x1f\n" +
	"\vreads_total\x18\x04 \x01(\x03R\n" +
	"readsTotal\"\x87\x01\n" +
	"\vMemoryStats\x12\x1f\n" +
	"\valloc_bytes\x18\x01 \x01(\x03R\n" +
	"allocBytes\x12\x1b\n" +
	"\tsys_bytes\x18\x02 \x01(\x03R\bsysBytes\x12\x17\n" +
	"\agc_runs\x18\x03 \x01(\x05R\x06gcRuns\x12!\n" +
	"\fheap_objects\x18\x04 \x01(\x03R\vheapObjects\"\x8e\x03\n" +
	"\x10GetStatsResponse\x12)\n" +
	"\x10events_processed\x18\x01 \x01(\x03R\x0feventsProcessed\x12%\n" +
	"\x0eevents_deduped\x18\x02 \x01(\x03R\reventsDeduped\x12'\n" +
	"\x0fbytes_processed\x18\x03 \x01(\x03R\x0ebytesProcessed\x12\x19\n" +
	"\bshard_id\x18\x04 \x01(\x05R\ashardId\x12\x1b\n" +
	"\tnuma_node\x18\x05 \x01(\x05R\bnumaNode\x121\n" +
	"\tbuffer_1s\x18\x06 \x01(\v2\x14.hottier.BufferStatsR\bbuffer1s\x123\n" +
	"\n" +
	"buffer_10s\x18\a \x01(\v2\x14.hottier.BufferStatsR\tbuffer10s\x121\n" +
	"\tbuffer_1m\x18\b \x01(\v2\x14.hottier.BufferStatsR\bbuffer1m\x12,\n" +
	"\x06memory\x18\t \x01(\v2\x14.hottier.MemoryStatsR\x06memory2\xc9\x01\n" +
	"\aHotTier\x12E\n" +
	"\n" +
	"ApplyBatch\x12\x1a.hottier.ApplyBatchRequest\x1a\x1b.hottier.ApplyBatchResponse\x126\n" +
	"\x05Query\x12\x15.hottier.QueryRequest\x1a\x16.hottier.QueryResponse\x12?\n" +
	"\bGetStats\x12\x18.hottier.GetStatsRequest\x1a\x19.hottier.GetStatsResponseB:Z8github.com/Milad-Afdasta/TrueNow/shared/proto/pb/hottierb\x06proto3"

var (
	file_hot_tier_proto_rawDescOnce sync.Once
	file_hot_tier_proto_rawDescData []byte
)

func file_hot_tier_proto_rawDescGZIP() []byte {
	file_hot_tier_proto_rawDescOnce.Do(func() {
		file_hot_tier_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_hot_tier_proto_rawDesc), len(file_hot_tier_proto_rawDesc)))
	})
	return file_hot_tier_proto_rawDescData
}

var file_hot_tier_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_hot_tier_proto_goTypes = []any{
	(*Record)(nil),             // 0: hottier.Record
	(*ApplyBatchRequest)(nil),  // 1: hottier.ApplyBatchRequest
	(*ApplyBatchResponse)(nil), // 2: hottier.ApplyBatchResponse
	(*QueryRequest)(nil),       // 3: hottier.QueryRequest
	(*AggregateResult)(nil),    // 4: hottier.AggregateResult
	(*QueryResponse)(nil),      // 5: hottier.QueryResponse
	(*GetStatsRequest)(nil),    // 6: hottier.GetStatsRequest
	(*BufferStats)(nil),        // 7: hottier.BufferStats
	(*MemoryStats)(nil),        // 8: hottier.MemoryStats
	(*GetStatsResponse)(nil),   // 9: hottier.GetStatsResponse
	nil,                        // 10: hottier.Record.DimensionsEntry
}
var file_hot_tier_proto_depIdxs = []int32{
	10, // 0: hottier.Record.dimensions:type_name -> hottier.Record.DimensionsEntry
	0,  // 1: hottier.ApplyBatchRequest.records:type_name -> hottier.Record
	4,  // 2: hottier.QueryResponse.results:type_name -> hottier.AggregateResult
	7,  // 3: hottier.GetStatsResponse.buffer_1s:type_name -> hottier.BufferStats
	7,  // 4: hottier.GetStatsResponse.buffer_10s:type_name -> hottier.BufferStats
	7,  // 5: hottier.GetStatsResponse.buffer_1m:type_name -> hottier.BufferStats
	8,  // 6: hottier.GetStatsResponse.memory:type_name -> hottier.MemoryStats
	1,  // 7: hottier.HotTier.ApplyBatch:input_type -> hottier.ApplyBatchRequest
	3,  // 8: hottier.HotTier.Query:input_type -> hottier.QueryRequest
	6,  // 9: hottier.HotTier.GetStats:input_type -> hottier.GetStatsRequest
	2,  // 10: hottier.HotTier.ApplyBatch:output_type -> hottier.ApplyBatchResponse
	5,  // 11: hottier.HotTier.Query:output_type -> hottier.QueryResponse
	9,  // 12: hottier.HotTier.GetStats:output_type -> hottier.GetStatsResponse
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_hot_tier_proto_init() }
func file_hot_tier_proto_init() {
	if File_hot_tier_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_hot_tier_proto_rawDesc), len(file_hot_tier_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hot_tier_proto_goTypes,
		DependencyIndexes: file_hot_tier_proto_depIdxs,
		MessageInfos:      file_hot_tier_proto_msgTypes,
	}.Build()
	File_hot_tier_proto = out.File
	file_hot_tier_proto_goTypes = nil
	file_hot_tier_proto_depIdxs = nil
}
