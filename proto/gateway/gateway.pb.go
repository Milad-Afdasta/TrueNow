// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.3
// source: gateway.proto

package gateway

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IngestEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Table         string                 `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	EventId       string                 `protobuf:"bytes,3,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"` // For deduplication
	Payload       []byte                 `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`                // Raw event data
	Headers       map[string]string      `protobuf:"bytes,5,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ClientId      string                 `protobuf:"bytes,7,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"` // For rate limiting
	Priority      int32                  `protobuf:"varint,8,opt,name=priority,proto3" json:"priority,omitempty"`                // 0=low, 1=normal, 2=high
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IngestEventRequest) Reset() {
	*x = IngestEventRequest{}
	mi := &file_gateway_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IngestEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestEventRequest) ProtoMessage() {}

func (x *IngestEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestEventRequest.ProtoReflect.Descriptor instead.
func (*IngestEventRequest) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{0}
}

func (x *IngestEventRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *IngestEventRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *IngestEventRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *IngestEventRequest) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *IngestEventRequest) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *IngestEventRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *IngestEventRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *IngestEventRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type IngestEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	EventId       string                 `protobuf:"bytes,3,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Offset        int64                  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"` // Kafka offset if applicable
	IngestedAt    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=ingested_at,json=ingestedAt,proto3" json:"ingested_at,omitempty"`
	Backpressure  *BackpressureSignal    `protobuf:"bytes,6,opt,name=backpressure,proto3" json:"backpressure,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IngestEventResponse) Reset() {
	*x = IngestEventResponse{}
	mi := &file_gateway_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IngestEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestEventResponse) ProtoMessage() {}

func (x *IngestEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestEventResponse.ProtoReflect.Descriptor instead.
func (*IngestEventResponse) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{1}
}

func (x *IngestEventResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *IngestEventResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *IngestEventResponse) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *IngestEventResponse) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *IngestEventResponse) GetIngestedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.IngestedAt
	}
	return nil
}

func (x *IngestEventResponse) GetBackpressure() *BackpressureSignal {
	if x != nil {
		return x.Backpressure
	}
	return nil
}

type BackpressureSignal struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Active             bool                   `protobuf:"varint,1,opt,name=active,proto3" json:"active,omitempty"`
	LoadFactor         float64                `protobuf:"fixed64,2,opt,name=load_factor,json=loadFactor,proto3" json:"load_factor,omitempty"` // 0-1, where 1 is max load
	SuggestedBackoffMs int32                  `protobuf:"varint,3,opt,name=suggested_backoff_ms,json=suggestedBackoffMs,proto3" json:"suggested_backoff_ms,omitempty"`
	Message            string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *BackpressureSignal) Reset() {
	*x = BackpressureSignal{}
	mi := &file_gateway_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackpressureSignal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackpressureSignal) ProtoMessage() {}

func (x *BackpressureSignal) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackpressureSignal.ProtoReflect.Descriptor instead.
func (*BackpressureSignal) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{2}
}

func (x *BackpressureSignal) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *BackpressureSignal) GetLoadFactor() float64 {
	if x != nil {
		return x.LoadFactor
	}
	return 0
}

func (x *BackpressureSignal) GetSuggestedBackoffMs() int32 {
	if x != nil {
		return x.SuggestedBackoffMs
	}
	return 0
}

func (x *BackpressureSignal) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type BatchIngestEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*IngestEventRequest  `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	Options       *BatchOptions          `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchIngestEventsRequest) Reset() {
	*x = BatchIngestEventsRequest{}
	mi := &file_gateway_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchIngestEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchIngestEventsRequest) ProtoMessage() {}

func (x *BatchIngestEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchIngestEventsRequest.ProtoReflect.Descriptor instead.
func (*BatchIngestEventsRequest) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{3}
}

func (x *BatchIngestEventsRequest) GetEvents() []*IngestEventRequest {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *BatchIngestEventsRequest) GetOptions() *BatchOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type BatchOptions struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Atomic         bool                   `protobuf:"varint,1,opt,name=atomic,proto3" json:"atomic,omitempty"`                                       // All or nothing
	SkipValidation bool                   `protobuf:"varint,2,opt,name=skip_validation,json=skipValidation,proto3" json:"skip_validation,omitempty"` // For trusted sources
	Compression    int32                  `protobuf:"varint,3,opt,name=compression,proto3" json:"compression,omitempty"`                             // 0=none, 1=snappy, 2=lz4
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *BatchOptions) Reset() {
	*x = BatchOptions{}
	mi := &file_gateway_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchOptions) ProtoMessage() {}

func (x *BatchOptions) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchOptions.ProtoReflect.Descriptor instead.
func (*BatchOptions) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{4}
}

func (x *BatchOptions) GetAtomic() bool {
	if x != nil {
		return x.Atomic
	}
	return false
}

func (x *BatchOptions) GetSkipValidation() bool {
	if x != nil {
		return x.SkipValidation
	}
	return false
}

func (x *BatchOptions) GetCompression() int32 {
	if x != nil {
		return x.Compression
	}
	return 0
}

type BatchIngestEventsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Succeeded     int32                  `protobuf:"varint,1,opt,name=succeeded,proto3" json:"succeeded,omitempty"`
	Failed        int32                  `protobuf:"varint,2,opt,name=failed,proto3" json:"failed,omitempty"`
	Results       []*EventResult         `protobuf:"bytes,3,rep,name=results,proto3" json:"results,omitempty"`
	Backpressure  *BackpressureSignal    `protobuf:"bytes,4,opt,name=backpressure,proto3" json:"backpressure,omitempty"`
	CompletedAt   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchIngestEventsResponse) Reset() {
	*x = BatchIngestEventsResponse{}
	mi := &file_gateway_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchIngestEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchIngestEventsResponse) ProtoMessage() {}

func (x *BatchIngestEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchIngestEventsResponse.ProtoReflect.Descriptor instead.
func (*BatchIngestEventsResponse) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{5}
}

func (x *BatchIngestEventsResponse) GetSucceeded() int32 {
	if x != nil {
		return x.Succeeded
	}
	return 0
}

func (x *BatchIngestEventsResponse) GetFailed() int32 {
	if x != nil {
		return x.Failed
	}
	return 0
}

func (x *BatchIngestEventsResponse) GetResults() []*EventResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *BatchIngestEventsResponse) GetBackpressure() *BackpressureSignal {
	if x != nil {
		return x.Backpressure
	}
	return nil
}

func (x *BatchIngestEventsResponse) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

type EventResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	Offset        int64                  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventResult) Reset() {
	*x = EventResult{}
	mi := &file_gateway_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventResult) ProtoMessage() {}

func (x *EventResult) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventResult.ProtoReflect.Descriptor instead.
func (*EventResult) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{6}
}

func (x *EventResult) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *EventResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *EventResult) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *EventResult) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetIngestionStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WindowSeconds int32                  `protobuf:"varint,1,opt,name=window_seconds,json=windowSeconds,proto3" json:"window_seconds,omitempty"` // Stats window
	Namespaces    []string               `protobuf:"bytes,2,rep,name=namespaces,proto3" json:"namespaces,omitempty"`                             // Filter by namespace
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetIngestionStatsRequest) Reset() {
	*x = GetIngestionStatsRequest{}
	mi := &file_gateway_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetIngestionStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIngestionStatsRequest) ProtoMessage() {}

func (x *GetIngestionStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIngestionStatsRequest.ProtoReflect.Descriptor instead.
func (*GetIngestionStatsRequest) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{7}
}

func (x *GetIngestionStatsRequest) GetWindowSeconds() int32 {
	if x != nil {
		return x.WindowSeconds
	}
	return 0
}

func (x *GetIngestionStatsRequest) GetNamespaces() []string {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

type IngestionStatsResponse struct {
	state             protoimpl.MessageState     `protogen:"open.v1"`
	TotalEvents       int64                      `protobuf:"varint,1,opt,name=total_events,json=totalEvents,proto3" json:"total_events,omitempty"`
	EventsPerSecond   int64                      `protobuf:"varint,2,opt,name=events_per_second,json=eventsPerSecond,proto3" json:"events_per_second,omitempty"`
	BytesPerSecond    int64                      `protobuf:"varint,3,opt,name=bytes_per_second,json=bytesPerSecond,proto3" json:"bytes_per_second,omitempty"`
	FailedEvents      int64                      `protobuf:"varint,4,opt,name=failed_events,json=failedEvents,proto3" json:"failed_events,omitempty"`
	SuccessRate       float64                    `protobuf:"fixed64,5,opt,name=success_rate,json=successRate,proto3" json:"success_rate,omitempty"`
	NamespaceStats    map[string]*NamespaceStats `protobuf:"bytes,6,rep,name=namespace_stats,json=namespaceStats,proto3" json:"namespace_stats,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	RateLimitStats    *RateLimitStats            `protobuf:"bytes,7,opt,name=rate_limit_stats,json=rateLimitStats,proto3" json:"rate_limit_stats,omitempty"`
	BackpressureStats *BackpressureStats         `protobuf:"bytes,8,opt,name=backpressure_stats,json=backpressureStats,proto3" json:"backpressure_stats,omitempty"`
	CalculatedAt      *timestamppb.Timestamp     `protobuf:"bytes,9,opt,name=calculated_at,json=calculatedAt,proto3" json:"calculated_at,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *IngestionStatsResponse) Reset() {
	*x = IngestionStatsResponse{}
	mi := &file_gateway_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IngestionStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IngestionStatsResponse) ProtoMessage() {}

func (x *IngestionStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IngestionStatsResponse.ProtoReflect.Descriptor instead.
func (*IngestionStatsResponse) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{8}
}

func (x *IngestionStatsResponse) GetTotalEvents() int64 {
	if x != nil {
		return x.TotalEvents
	}
	return 0
}

func (x *IngestionStatsResponse) GetEventsPerSecond() int64 {
	if x != nil {
		return x.EventsPerSecond
	}
	return 0
}

func (x *IngestionStatsResponse) GetBytesPerSecond() int64 {
	if x != nil {
		return x.BytesPerSecond
	}
	return 0
}

func (x *IngestionStatsResponse) GetFailedEvents() int64 {
	if x != nil {
		return x.FailedEvents
	}
	return 0
}

func (x *IngestionStatsResponse) GetSuccessRate() float64 {
	if x != nil {
		return x.SuccessRate
	}
	return 0
}

func (x *IngestionStatsResponse) GetNamespaceStats() map[string]*NamespaceStats {
	if x != nil {
		return x.NamespaceStats
	}
	return nil
}

func (x *IngestionStatsResponse) GetRateLimitStats() *RateLimitStats {
	if x != nil {
		return x.RateLimitStats
	}
	return nil
}

func (x *IngestionStatsResponse) GetBackpressureStats() *BackpressureStats {
	if x != nil {
		return x.BackpressureStats
	}
	return nil
}

func (x *IngestionStatsResponse) GetCalculatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CalculatedAt
	}
	return nil
}

type NamespaceStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Events        int64                  `protobuf:"varint,2,opt,name=events,proto3" json:"events,omitempty"`
	Bytes         int64                  `protobuf:"varint,3,opt,name=bytes,proto3" json:"bytes,omitempty"`
	AvgLatencyMs  float64                `protobuf:"fixed64,4,opt,name=avg_latency_ms,json=avgLatencyMs,proto3" json:"avg_latency_ms,omitempty"`
	P99LatencyMs  float64                `protobuf:"fixed64,5,opt,name=p99_latency_ms,json=p99LatencyMs,proto3" json:"p99_latency_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NamespaceStats) Reset() {
	*x = NamespaceStats{}
	mi := &file_gateway_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NamespaceStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceStats) ProtoMessage() {}

func (x *NamespaceStats) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceStats.ProtoReflect.Descriptor instead.
func (*NamespaceStats) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{9}
}

func (x *NamespaceStats) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *NamespaceStats) GetEvents() int64 {
	if x != nil {
		return x.Events
	}
	return 0
}

func (x *NamespaceStats) GetBytes() int64 {
	if x != nil {
		return x.Bytes
	}
	return 0
}

func (x *NamespaceStats) GetAvgLatencyMs() float64 {
	if x != nil {
		return x.AvgLatencyMs
	}
	return 0
}

func (x *NamespaceStats) GetP99LatencyMs() float64 {
	if x != nil {
		return x.P99LatencyMs
	}
	return 0
}

type RateLimitStats struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TotalLimited    int64                  `protobuf:"varint,1,opt,name=total_limited,json=totalLimited,proto3" json:"total_limited,omitempty"`
	CurrentQps      int64                  `protobuf:"varint,2,opt,name=current_qps,json=currentQps,proto3" json:"current_qps,omitempty"`
	MaxQps          int64                  `protobuf:"varint,3,opt,name=max_qps,json=maxQps,proto3" json:"max_qps,omitempty"`
	LimitedByClient map[string]int64       `protobuf:"bytes,4,rep,name=limited_by_client,json=limitedByClient,proto3" json:"limited_by_client,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RateLimitStats) Reset() {
	*x = RateLimitStats{}
	mi := &file_gateway_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RateLimitStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimitStats) ProtoMessage() {}

func (x *RateLimitStats) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimitStats.ProtoReflect.Descriptor instead.
func (*RateLimitStats) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{10}
}

func (x *RateLimitStats) GetTotalLimited() int64 {
	if x != nil {
		return x.TotalLimited
	}
	return 0
}

func (x *RateLimitStats) GetCurrentQps() int64 {
	if x != nil {
		return x.CurrentQps
	}
	return 0
}

func (x *RateLimitStats) GetMaxQps() int64 {
	if x != nil {
		return x.MaxQps
	}
	return 0
}

func (x *RateLimitStats) GetLimitedByClient() map[string]int64 {
	if x != nil {
		return x.LimitedByClient
	}
	return nil
}

type BackpressureStats struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Active           bool                   `protobuf:"varint,1,opt,name=active,proto3" json:"active,omitempty"`
	CurrentLoad      float64                `protobuf:"fixed64,2,opt,name=current_load,json=currentLoad,proto3" json:"current_load,omitempty"`
	EventsShed       int64                  `protobuf:"varint,3,opt,name=events_shed,json=eventsShed,proto3" json:"events_shed,omitempty"`
	EventsQueued     int64                  `protobuf:"varint,4,opt,name=events_queued,json=eventsQueued,proto3" json:"events_queued,omitempty"`
	QueueUtilization float64                `protobuf:"fixed64,5,opt,name=queue_utilization,json=queueUtilization,proto3" json:"queue_utilization,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BackpressureStats) Reset() {
	*x = BackpressureStats{}
	mi := &file_gateway_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackpressureStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackpressureStats) ProtoMessage() {}

func (x *BackpressureStats) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackpressureStats.ProtoReflect.Descriptor instead.
func (*BackpressureStats) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{11}
}

func (x *BackpressureStats) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *BackpressureStats) GetCurrentLoad() float64 {
	if x != nil {
		return x.CurrentLoad
	}
	return 0
}

func (x *BackpressureStats) GetEventsShed() int64 {
	if x != nil {
		return x.EventsShed
	}
	return 0
}

func (x *BackpressureStats) GetEventsQueued() int64 {
	if x != nil {
		return x.EventsQueued
	}
	return 0
}

func (x *BackpressureStats) GetQueueUtilization() float64 {
	if x != nil {
		return x.QueueUtilization
	}
	return 0
}

type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_gateway_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{12}
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Healthy       bool                        `protobuf:"varint,1,opt,name=healthy,proto3" json:"healthy,omitempty"`
	Status        string                      `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // "healthy", "degraded", "unhealthy"
	Components    map[string]*ComponentHealth `protobuf:"bytes,3,rep,name=components,proto3" json:"components,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Timestamp     *timestamppb.Timestamp      `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_gateway_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{13}
}

func (x *HealthCheckResponse) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *HealthCheckResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthCheckResponse) GetComponents() map[string]*ComponentHealth {
	if x != nil {
		return x.Components
	}
	return nil
}

func (x *HealthCheckResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type ComponentHealth struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Healthy       bool                   `protobuf:"varint,1,opt,name=healthy,proto3" json:"healthy,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	LatencyMs     float64                `protobuf:"fixed64,3,opt,name=latency_ms,json=latencyMs,proto3" json:"latency_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ComponentHealth) Reset() {
	*x = ComponentHealth{}
	mi := &file_gateway_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComponentHealth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentHealth) ProtoMessage() {}

func (x *ComponentHealth) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentHealth.ProtoReflect.Descriptor instead.
func (*ComponentHealth) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{14}
}

func (x *ComponentHealth) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *ComponentHealth) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ComponentHealth) GetLatencyMs() float64 {
	if x != nil {
		return x.LatencyMs
	}
	return 0
}

type GetRateLimitStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRateLimitStatusRequest) Reset() {
	*x = GetRateLimitStatusRequest{}
	mi := &file_gateway_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRateLimitStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRateLimitStatusRequest) ProtoMessage() {}

func (x *GetRateLimitStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRateLimitStatusRequest.ProtoReflect.Descriptor instead.
func (*GetRateLimitStatusRequest) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{15}
}

func (x *GetRateLimitStatusRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *GetRateLimitStatusRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type RateLimitStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	CurrentRate   int64                  `protobuf:"varint,2,opt,name=current_rate,json=currentRate,proto3" json:"current_rate,omitempty"`
	Limit         int64                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Remaining     int64                  `protobuf:"varint,4,opt,name=remaining,proto3" json:"remaining,omitempty"`
	ResetAt       int64                  `protobuf:"varint,5,opt,name=reset_at,json=resetAt,proto3" json:"reset_at,omitempty"` // Unix timestamp
	Limited       bool                   `protobuf:"varint,6,opt,name=limited,proto3" json:"limited,omitempty"`
	Tier          string                 `protobuf:"bytes,7,opt,name=tier,proto3" json:"tier,omitempty"` // "free", "standard", "premium", etc.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RateLimitStatusResponse) Reset() {
	*x = RateLimitStatusResponse{}
	mi := &file_gateway_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RateLimitStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RateLimitStatusResponse) ProtoMessage() {}

func (x *RateLimitStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RateLimitStatusResponse.ProtoReflect.Descriptor instead.
func (*RateLimitStatusResponse) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{16}
}

func (x *RateLimitStatusResponse) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *RateLimitStatusResponse) GetCurrentRate() int64 {
	if x != nil {
		return x.CurrentRate
	}
	return 0
}

func (x *RateLimitStatusResponse) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *RateLimitStatusResponse) GetRemaining() int64 {
	if x != nil {
		return x.Remaining
	}
	return 0
}

func (x *RateLimitStatusResponse) GetResetAt() int64 {
	if x != nil {
		return x.ResetAt
	}
	return 0
}

func (x *RateLimitStatusResponse) GetLimited() bool {
	if x != nil {
		return x.Limited
	}
	return false
}

func (x *RateLimitStatusResponse) GetTier() string {
	if x != nil {
		return x.Tier
	}
	return ""
}

var File_gateway_proto protoreflect.FileDescriptor

const file_gateway_proto_rawDesc = "" +
	"\n" +
	"\rgateway.proto\x12\x0ftruenow.gateway\x1a\x1fgoogle/protobuf/timestamp.proto\"\xf8\x02\n" +
	"\x12IngestEventRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x14\n" +
	"\x05table\x18\x02 \x01(\tR\x05table\x12\x19\n" +
	"\bevent_id\x18\x03 \x01(\tR\aeventId\x12\x18\n" +
	"\apayload\x18\x04 \x01(\fR\apayload\x12J\n" +
	"\aheaders\x18\x05 \x03(\v20.truenow.gateway.IngestEventRequest.HeadersEntryR\aheaders\x128\n" +
	"\ttimestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1b\n" +
	"\tclient_id\x18\a \x01(\tR\bclientId\x12\x1a\n" +
	"\bpriority\x18\b \x01(\x05R\bpriority\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x82\x02\n" +
	"\x13IngestEventResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x19\n" +
	"\bevent_id\x18\x03 \x01(\tR\aeventId\x12\x16\n" +
	"\x06offset\x18\x04 \x01(\x03R\x06offset\x12;\n" +
	"\vingested_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"ingestedAt\x12G\n" +
	"\fbackpressure\x18\x06 \x01(\v2#.truenow.gateway.BackpressureSignalR\fbackpressure\"\x99\x01\n" +
	"\x12BackpressureSignal\x12\x16\n" +
	"\x06active\x18\x01 \x01(\bR\x06active\x12\x1f\n" +
	"\vload_factor\x18\x02 \x01(\x01R\n" +
	"loadFactor\x120\n" +
	"\x14suggested_backoff_ms\x18\x03 \x01(\x05R\x12suggestedBackoffMs\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\"\x90\x01\n" +
	"\x18BatchIngestEventsRequest\x12;\n" +
	"\x06events\x18\x01 \x03(\v2#.truenow.gateway.IngestEventRequestR\x06events\x127\n" +
	"\aoptions\x18\x02 \x01(\v2\x1d.truenow.gateway.BatchOptionsR\aoptions\"q\n" +
	"\fBatchOptions\x12\x16\n" +
	"\x06atomic\x18\x01 \x01(\bR\x06atomic\x12'\n" +
	"\x0fskip_validation\x18\x02 \x01(\bR\x0eskipValidation\x12 \n" +
	"\vcompression\x18\x03 \x01(\x05R\vcompression\"\x91\x02\n" +
	"\x19BatchIngestEventsResponse\x12\x1c\n" +
	"\tsucceeded\x18\x01 \x01(\x05R\tsucceeded\x12\x16\n" +
	"\x06failed\x18\x02 \x01(\x05R\x06failed\x126\n" +
	"\aresults\x18\x03 \x03(\v2\x1c.truenow.gateway.EventResultR\aresults\x12G\n" +
	"\fbackpressure\x18\x04 \x01(\v2#.truenow.gateway.BackpressureSignalR\fbackpressure\x12=\n" +
	"\fcompleted_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\"p\n" +
	"\vEventResult\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\x12\x16\n" +
	"\x06offset\x18\x04 \x01(\x03R\x06offset\"a\n" +
	"\x18GetIngestionStatsRequest\x12%\n" +
	"\x0ewindow_seconds\x18\x01 \x01(\x05R\rwindowSeconds\x12\x1e\n" +
	"\n" +
	"namespaces\x18\x02 \x03(\tR\n" +
	"namespaces\"\x82\x05\n" +
	"\x16IngestionStatsResponse\x12!\n" +
	"\ftotal_events\x18\x01 \x01(\x03R\vtotalEvents\x12*\n" +
	"\x11events_per_second\x18\x02 \x01(\x03R\x0feventsPerSecond\x12(\n" +
	"\x10bytes_per_second\x18\x03 \x01(\x03R\x0ebytesPerSecond\x12#\n" +
	"\rfailed_events\x18\x04 \x01(\x03R\ffailedEvents\x12!\n" +
	"\fsuccess_rate\x18\x05 \x01(\x01R\vsuccessRate\x12d\n" +
	"\x0fnamespace_stats\x18\x06 \x03(\v2;.truenow.gateway.IngestionStatsResponse.NamespaceStatsEntryR\x0enamespaceStats\x12I\n" +
	"\x10rate_limit_stats\x18\a \x01(\v2\x1f.truenow.gateway.RateLimitStatsR\x0erateLimitStats\x12Q\n" +
	"\x12backpressure_stats\x18\b \x01(\v2\".truenow.gateway.BackpressureStatsR\x11backpressureStats\x12?\n" +
	"\rcalculated_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\fcalculatedAt\x1ab\n" +
	"\x13NamespaceStatsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x125\n" +
	"\x05value\x18\x02 \x01(\v2\x1f.truenow.gateway.NamespaceStatsR\x05value:\x028\x01\"\xa8\x01\n" +
	"\x0eNamespaceStats\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x16\n" +
	"\x06events\x18\x02 \x01(\x03R\x06events\x12\x14\n" +
	"\x05bytes\x18\x03 \x01(\x03R\x05bytes\x12$\n" +
	"\x0eavg_latency_ms\x18\x04 \x01(\x01R\favgLatencyMs\x12$\n" +
	"\x0ep99_latency_ms\x18\x05 \x01(\x01R\fp99LatencyMs\"\x95\x02\n" +
	"\x0eRateLimitStats\x12#\n" +
	"\rtotal_limited\x18\x01 \x01(\x03R\ftotalLimited\x12\x1f\n" +
	"\vcurrent_qps\x18\x02 \x01(\x03R\n" +
	"currentQps\x12\x17\n" +
	"\amax_qps\x18\x03 \x01(\x03R\x06maxQps\x12`\n" +
	"\x11limited_by_client\x18\x04 \x03(\v24.truenow.gateway.RateLimitStats.LimitedByClientEntryR\x0flimitedByClient\x1aB\n" +
	"\x14LimitedByClientEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\"\xc1\x01\n" +
	"\x11BackpressureStats\x12\x16\n" +
	"\x06active\x18\x01 \x01(\bR\x06active\x12!\n" +
	"\fcurrent_load\x18\x02 \x01(\x01R\vcurrentLoad\x12\x1f\n" +
	"\vevents_shed\x18\x03 \x01(\x03R\n" +
	"eventsShed\x12#\n" +
	"\revents_queued\x18\x04 \x01(\x03R\feventsQueued\x12+\n" +
	"\x11queue_utilization\x18\x05 \x01(\x01R\x10queueUtilization\"\x14\n" +
	"\x12HealthCheckRequest\"\xb8\x02\n" +
	"\x13HealthCheckResponse\x12\x18\n" +
	"\ahealthy\x18\x01 \x01(\bR\ahealthy\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12T\n" +
	"\n" +
	"components\x18\x03 \x03(\v24.truenow.gateway.HealthCheckResponse.ComponentsEntryR\n" +
	"components\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x1a_\n" +
	"\x0fComponentsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x126\n" +
	"\x05value\x18\x02 \x01(\v2 .truenow.gateway.ComponentHealthR\x05value:\x028\x01\"d\n" +
	"\x0fComponentHealth\x12\x18\n" +
	"\ahealthy\x18\x01 \x01(\bR\ahealthy\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"latency_ms\x18\x03 \x01(\x01R\tlatencyMs\"V\n" +
	"\x19GetRateLimitStatusRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\"\xd6\x01\n" +
	"\x17RateLimitStatusResponse\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12!\n" +
	"\fcurrent_rate\x18\x02 \x01(\x03R\vcurrentRate\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x03R\x05limit\x12\x1c\n" +
	"\tremaining\x18\x04 \x01(\x03R\tremaining\x12\x19\n" +
	"\breset_at\x18\x05 \x01(\x03R\aresetAt\x12\x18\n" +
	"\alimited\x18\x06 \x01(\bR\alimited\x12\x12\n" +
	"\x04tier\x18\a \x01(\tR\x04tier2\xea\x04\n" +
	"\x0eGatewayService\x12X\n" +
	"\vIngestEvent\x12#.truenow.gateway.IngestEventRequest\x1a$.truenow.gateway.IngestEventResponse\x12j\n" +
	"\x11BatchIngestEvents\x12).truenow.gateway.BatchIngestEventsRequest\x1a*.truenow.gateway.BatchIngestEventsResponse\x12c\n" +
	"\x12StreamIngestEvents\x12#.truenow.gateway.IngestEventRequest\x1a$.truenow.gateway.IngestEventResponse(\x010\x01\x12g\n" +
	"\x11GetIngestionStats\x12).truenow.gateway.GetIngestionStatsRequest\x1a'.truenow.gateway.IngestionStatsResponse\x12X\n" +
	"\vHealthCheck\x12#.truenow.gateway.HealthCheckRequest\x1a$.truenow.gateway.HealthCheckResponse\x12j\n" +
	"\x12GetRateLimitStatus\x12*.truenow.gateway.GetRateLimitStatusRequest\x1a(.truenow.gateway.RateLimitStatusResponseB8Z6github.com/Milad-Afdasta/TrueNow/proto/gateway;gatewayb\x06proto3"

var (
	file_gateway_proto_rawDescOnce sync.Once
	file_gateway_proto_rawDescData []byte
)

func file_gateway_proto_rawDescGZIP() []byte {
	file_gateway_proto_rawDescOnce.Do(func() {
		file_gateway_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_gateway_proto_rawDesc), len(file_gateway_proto_rawDesc)))
	})
	return file_gateway_proto_rawDescData
}

var file_gateway_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_gateway_proto_goTypes = []any{
	(*IngestEventRequest)(nil),        // 0: truenow.gateway.IngestEventRequest
	(*IngestEventResponse)(nil),       // 1: truenow.gateway.IngestEventResponse
	(*BackpressureSignal)(nil),        // 2: truenow.gateway.BackpressureSignal
	(*BatchIngestEventsRequest)(nil),  // 3: truenow.gateway.BatchIngestEventsRequest
	(*BatchOptions)(nil),              // 4: truenow.gateway.BatchOptions
	(*BatchIngestEventsResponse)(nil), // 5: truenow.gateway.BatchIngestEventsResponse
	(*EventResult)(nil),               // 6: truenow.gateway.EventResult
	(*GetIngestionStatsRequest)(nil),  // 7: truenow.gateway.GetIngestionStatsRequest
	(*IngestionStatsResponse)(nil),    // 8: truenow.gateway.IngestionStatsResponse
	(*NamespaceStats)(nil),            // 9: truenow.gateway.NamespaceStats
	(*RateLimitStats)(nil),            // 10: truenow.gateway.RateLimitStats
	(*BackpressureStats)(nil),         // 11: truenow.gateway.BackpressureStats
	(*HealthCheckRequest)(nil),        // 12: truenow.gateway.HealthCheckRequest
	(*HealthCheckResponse)(nil),       // 13: truenow.gateway.HealthCheckResponse
	(*ComponentHealth)(nil),           // 14: truenow.gateway.ComponentHealth
	(*GetRateLimitStatusRequest)(nil), // 15: truenow.gateway.GetRateLimitStatusRequest
	(*RateLimitStatusResponse)(nil),   // 16: truenow.gateway.RateLimitStatusResponse
	nil,                               // 17: truenow.gateway.IngestEventRequest.HeadersEntry
	nil,                               // 18: truenow.gateway.IngestionStatsResponse.NamespaceStatsEntry
	nil,                               // 19: truenow.gateway.RateLimitStats.LimitedByClientEntry
	nil,                               // 20: truenow.gateway.HealthCheckResponse.ComponentsEntry
	(*timestamppb.Timestamp)(nil),     // 21: google.protobuf.Timestamp
}
var file_gateway_proto_depIdxs = []int32{
	17, // 0: truenow.gateway.IngestEventRequest.headers:type_name -> truenow.gateway.IngestEventRequest.HeadersEntry
	21, // 1: truenow.gateway.IngestEventRequest.timestamp:type_name -> google.protobuf.Timestamp
	21, // 2: truenow.gateway.IngestEventResponse.ingested_at:type_name -> google.protobuf.Timestamp
	2,  // 3: truenow.gateway.IngestEventResponse.backpressure:type_name -> truenow.gateway.BackpressureSignal
	0,  // 4: truenow.gateway.BatchIngestEventsRequest.events:type_name -> truenow.gateway.IngestEventRequest
	4,  // 5: truenow.gateway.BatchIngestEventsRequest.options:type_name -> truenow.gateway.BatchOptions
	6,  // 6: truenow.gateway.BatchIngestEventsResponse.results:type_name -> truenow.gateway.EventResult
	2,  // 7: truenow.gateway.BatchIngestEventsResponse.backpressure:type_name -> truenow.gateway.BackpressureSignal
	21, // 8: truenow.gateway.BatchIngestEventsResponse.completed_at:type_name -> google.protobuf.Timestamp
	18, // 9: truenow.gateway.IngestionStatsResponse.namespace_stats:type_name -> truenow.gateway.IngestionStatsResponse.NamespaceStatsEntry
	10, // 10: truenow.gateway.IngestionStatsResponse.rate_limit_stats:type_name -> truenow.gateway.RateLimitStats
	11, // 11: truenow.gateway.IngestionStatsResponse.backpressure_stats:type_name -> truenow.gateway.BackpressureStats
	21, // 12: truenow.gateway.IngestionStatsResponse.calculated_at:type_name -> google.protobuf.Timestamp
	19, // 13: truenow.gateway.RateLimitStats.limited_by_client:type_name -> truenow.gateway.RateLimitStats.LimitedByClientEntry
	20, // 14: truenow.gateway.HealthCheckResponse.components:type_name -> truenow.gateway.HealthCheckResponse.ComponentsEntry
	21, // 15: truenow.gateway.HealthCheckResponse.timestamp:type_name -> google.protobuf.Timestamp
	9,  // 16: truenow.gateway.IngestionStatsResponse.NamespaceStatsEntry.value:type_name -> truenow.gateway.NamespaceStats
	14, // 17: truenow.gateway.HealthCheckResponse.ComponentsEntry.value:type_name -> truenow.gateway.ComponentHealth
	0,  // 18: truenow.gateway.GatewayService.IngestEvent:input_type -> truenow.gateway.IngestEventRequest
	3,  // 19: truenow.gateway.GatewayService.BatchIngestEvents:input_type -> truenow.gateway.BatchIngestEventsRequest
	0,  // 20: truenow.gateway.GatewayService.StreamIngestEvents:input_type -> truenow.gateway.IngestEventRequest
	7,  // 21: truenow.gateway.GatewayService.GetIngestionStats:input_type -> truenow.gateway.GetIngestionStatsRequest
	12, // 22: truenow.gateway.GatewayService.HealthCheck:input_type -> truenow.gateway.HealthCheckRequest
	15, // 23: truenow.gateway.GatewayService.GetRateLimitStatus:input_type -> truenow.gateway.GetRateLimitStatusRequest
	1,  // 24: truenow.gateway.GatewayService.IngestEvent:output_type -> truenow.gateway.IngestEventResponse
	5,  // 25: truenow.gateway.GatewayService.BatchIngestEvents:output_type -> truenow.gateway.BatchIngestEventsResponse
	1,  // 26: truenow.gateway.GatewayService.StreamIngestEvents:output_type -> truenow.gateway.IngestEventResponse
	8,  // 27: truenow.gateway.GatewayService.GetIngestionStats:output_type -> truenow.gateway.IngestionStatsResponse
	13, // 28: truenow.gateway.GatewayService.HealthCheck:output_type -> truenow.gateway.HealthCheckResponse
	16, // 29: truenow.gateway.GatewayService.GetRateLimitStatus:output_type -> truenow.gateway.RateLimitStatusResponse
	24, // [24:30] is the sub-list for method output_type
	18, // [18:24] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_gateway_proto_init() }
func file_gateway_proto_init() {
	if File_gateway_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gateway_proto_rawDesc), len(file_gateway_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gateway_proto_goTypes,
		DependencyIndexes: file_gateway_proto_depIdxs,
		MessageInfos:      file_gateway_proto_msgTypes,
	}.Build()
	File_gateway_proto = out.File
	file_gateway_proto_goTypes = nil
	file_gateway_proto_depIdxs = nil
}
