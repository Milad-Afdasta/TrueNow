// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.3
// source: rebalancer.proto

package rebalancer

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ShardState int32

const (
	ShardState_ACTIVE    ShardState = 0
	ShardState_MIGRATING ShardState = 1
	ShardState_SPLITTING ShardState = 2
	ShardState_MERGING   ShardState = 3
	ShardState_INACTIVE  ShardState = 4
)

// Enum value maps for ShardState.
var (
	ShardState_name = map[int32]string{
		0: "ACTIVE",
		1: "MIGRATING",
		2: "SPLITTING",
		3: "MERGING",
		4: "INACTIVE",
	}
	ShardState_value = map[string]int32{
		"ACTIVE":    0,
		"MIGRATING": 1,
		"SPLITTING": 2,
		"MERGING":   3,
		"INACTIVE":  4,
	}
)

func (x ShardState) Enum() *ShardState {
	p := new(ShardState)
	*p = x
	return p
}

func (x ShardState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShardState) Descriptor() protoreflect.EnumDescriptor {
	return file_rebalancer_proto_enumTypes[0].Descriptor()
}

func (ShardState) Type() protoreflect.EnumType {
	return &file_rebalancer_proto_enumTypes[0]
}

func (x ShardState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ShardState.Descriptor instead.
func (ShardState) EnumDescriptor() ([]byte, []int) {
	return file_rebalancer_proto_rawDescGZIP(), []int{0}
}

type MigrationReason int32

const (
	MigrationReason_HOTSPOT_MITIGATION MigrationReason = 0
	MigrationReason_NODE_FAILURE       MigrationReason = 1
	MigrationReason_SCALE_UP           MigrationReason = 2
	MigrationReason_SCALE_DOWN         MigrationReason = 3
	MigrationReason_MANUAL_REBALANCE   MigrationReason = 4
)

// Enum value maps for MigrationReason.
var (
	MigrationReason_name = map[int32]string{
		0: "HOTSPOT_MITIGATION",
		1: "NODE_FAILURE",
		2: "SCALE_UP",
		3: "SCALE_DOWN",
		4: "MANUAL_REBALANCE",
	}
	MigrationReason_value = map[string]int32{
		"HOTSPOT_MITIGATION": 0,
		"NODE_FAILURE":       1,
		"SCALE_UP":           2,
		"SCALE_DOWN":         3,
		"MANUAL_REBALANCE":   4,
	}
)

func (x MigrationReason) Enum() *MigrationReason {
	p := new(MigrationReason)
	*p = x
	return p
}

func (x MigrationReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MigrationReason) Descriptor() protoreflect.EnumDescriptor {
	return file_rebalancer_proto_enumTypes[1].Descriptor()
}

func (MigrationReason) Type() protoreflect.EnumType {
	return &file_rebalancer_proto_enumTypes[1]
}

func (x MigrationReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MigrationReason.Descriptor instead.
func (MigrationReason) EnumDescriptor() ([]byte, []int) {
	return file_rebalancer_proto_rawDescGZIP(), []int{1}
}

type AlertType int32

const (
	AlertType_HIGH_LOAD           AlertType = 0
	AlertType_UNEVEN_DISTRIBUTION AlertType = 1
	AlertType_HOTSPOT_DETECTED    AlertType = 2
	AlertType_CAPACITY_WARNING    AlertType = 3
)

// Enum value maps for AlertType.
var (
	AlertType_name = map[int32]string{
		0: "HIGH_LOAD",
		1: "UNEVEN_DISTRIBUTION",
		2: "HOTSPOT_DETECTED",
		3: "CAPACITY_WARNING",
	}
	AlertType_value = map[string]int32{
		"HIGH_LOAD":           0,
		"UNEVEN_DISTRIBUTION": 1,
		"HOTSPOT_DETECTED":    2,
		"CAPACITY_WARNING":    3,
	}
)

func (x AlertType) Enum() *AlertType {
	p := new(AlertType)
	*p = x
	return p
}

func (x AlertType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlertType) Descriptor() protoreflect.EnumDescriptor {
	return file_rebalancer_proto_enumTypes[2].Descriptor()
}

func (AlertType) Type() protoreflect.EnumType {
	return &file_rebalancer_proto_enumTypes[2]
}

func (x AlertType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AlertType.Descriptor instead.
func (AlertType) EnumDescriptor() ([]byte, []int) {
	return file_rebalancer_proto_rawDescGZIP(), []int{2}
}

type MitigationStrategy int32

const (
	MitigationStrategy_NONE           MitigationStrategy = 0
	MitigationStrategy_SPLIT_SHARD    MitigationStrategy = 1
	MitigationStrategy_MIGRATE_SHARD  MitigationStrategy = 2
	MitigationStrategy_ADD_REPLICA    MitigationStrategy = 3
	MitigationStrategy_RATE_LIMIT     MitigationStrategy = 4
	MitigationStrategy_CACHE_HOT_KEYS MitigationStrategy = 5
)

// Enum value maps for MitigationStrategy.
var (
	MitigationStrategy_name = map[int32]string{
		0: "NONE",
		1: "SPLIT_SHARD",
		2: "MIGRATE_SHARD",
		3: "ADD_REPLICA",
		4: "RATE_LIMIT",
		5: "CACHE_HOT_KEYS",
	}
	MitigationStrategy_value = map[string]int32{
		"NONE":           0,
		"SPLIT_SHARD":    1,
		"MIGRATE_SHARD":  2,
		"ADD_REPLICA":    3,
		"RATE_LIMIT":     4,
		"CACHE_HOT_KEYS": 5,
	}
)

func (x MitigationStrategy) Enum() *MitigationStrategy {
	p := new(MitigationStrategy)
	*p = x
	return p
}

func (x MitigationStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MitigationStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_rebalancer_proto_enumTypes[3].Descriptor()
}

func (MitigationStrategy) Type() protoreflect.EnumType {
	return &file_rebalancer_proto_enumTypes[3]
}

func (x MitigationStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MitigationStrategy.Descriptor instead.
func (MitigationStrategy) EnumDescriptor() ([]byte, []int) {
	return file_rebalancer_proto_rawDescGZIP(), []int{3}
}

type RebalanceStrategy int32

const (
	RebalanceStrategy_AUTOMATIC             RebalanceStrategy = 0
	RebalanceStrategy_MINIMIZE_MOVEMENT     RebalanceStrategy = 1 // Move minimum shards
	RebalanceStrategy_OPTIMIZE_DISTRIBUTION RebalanceStrategy = 2 // Achieve perfect balance
	RebalanceStrategy_HOTSPOT_FOCUSED       RebalanceStrategy = 3 // Only fix hotspots
)

// Enum value maps for RebalanceStrategy.
var (
	RebalanceStrategy_name = map[int32]string{
		0: "AUTOMATIC",
		1: "MINIMIZE_MOVEMENT",
		2: "OPTIMIZE_DISTRIBUTION",
		3: "HOTSPOT_FOCUSED",
	}
	RebalanceStrategy_value = map[string]int32{
		"AUTOMATIC":             0,
		"MINIMIZE_MOVEMENT":     1,
		"OPTIMIZE_DISTRIBUTION": 2,
		"HOTSPOT_FOCUSED":       3,
	}
)

func (x RebalanceStrategy) Enum() *RebalanceStrategy {
	p := new(RebalanceStrategy)
	*p = x
	return p
}

func (x RebalanceStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RebalanceStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_rebalancer_proto_enumTypes[4].Descriptor()
}

func (RebalanceStrategy) Type() protoreflect.EnumType {
	return &file_rebalancer_proto_enumTypes[4]
}

func (x RebalanceStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RebalanceStrategy.Descriptor instead.
func (RebalanceStrategy) EnumDescriptor() ([]byte, []int) {
	return file_rebalancer_proto_rawDescGZIP(), []int{4}
}

type GetShardAssignmentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Table         string                 `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	Services      []string               `protobuf:"bytes,3,rep,name=services,proto3" json:"services,omitempty"` // Filter by services
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetShardAssignmentsRequest) Reset() {
	*x = GetShardAssignmentsRequest{}
	mi := &file_rebalancer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetShardAssignmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShardAssignmentsRequest) ProtoMessage() {}

func (x *GetShardAssignmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rebalancer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShardAssignmentsRequest.ProtoReflect.Descriptor instead.
func (*GetShardAssignmentsRequest) Descriptor() ([]byte, []int) {
	return file_rebalancer_proto_rawDescGZIP(), []int{0}
}

func (x *GetShardAssignmentsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetShardAssignmentsRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *GetShardAssignmentsRequest) GetServices() []string {
	if x != nil {
		return x.Services
	}
	return nil
}

type ShardAssignmentsResponse struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Assignments   map[string]*ShardAssignment `protobuf:"bytes,1,rep,name=assignments,proto3" json:"assignments,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // key: shard_id
	CurrentEpoch  int64                       `protobuf:"varint,2,opt,name=current_epoch,json=currentEpoch,proto3" json:"current_epoch,omitempty"`
	LastUpdate    *timestamppb.Timestamp      `protobuf:"bytes,3,opt,name=last_update,json=lastUpdate,proto3" json:"last_update,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShardAssignmentsResponse) Reset() {
	*x = ShardAssignmentsResponse{}
	mi := &file_rebalancer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShardAssignmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardAssignmentsResponse) ProtoMessage() {}

func (x *ShardAssignmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rebalancer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardAssignmentsResponse.ProtoReflect.Descriptor instead.
func (*ShardAssignmentsResponse) Descriptor() ([]byte, []int) {
	return file_rebalancer_proto_rawDescGZIP(), []int{1}
}

func (x *ShardAssignmentsResponse) GetAssignments() map[string]*ShardAssignment {
	if x != nil {
		return x.Assignments
	}
	return nil
}

func (x *ShardAssignmentsResponse) GetCurrentEpoch() int64 {
	if x != nil {
		return x.CurrentEpoch
	}
	return 0
}

func (x *ShardAssignmentsResponse) GetLastUpdate() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdate
	}
	return nil
}

type ShardAssignment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShardId       string                 `protobuf:"bytes,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	PrimaryOwner  string                 `protobuf:"bytes,2,opt,name=primary_owner,json=primaryOwner,proto3" json:"primary_owner,omitempty"`
	Replicas      []string               `protobuf:"bytes,3,rep,name=replicas,proto3" json:"replicas,omitempty"`
	VirtualShards int32                  `protobuf:"varint,4,opt,name=virtual_shards,json=virtualShards,proto3" json:"virtual_shards,omitempty"` // Number of virtual shards mapped
	LoadScore     float64                `protobuf:"fixed64,5,opt,name=load_score,json=loadScore,proto3" json:"load_score,omitempty"`            // Current load on this shard
	State         ShardState             `protobuf:"varint,6,opt,name=state,proto3,enum=truenow.rebalancer.ShardState" json:"state,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShardAssignment) Reset() {
	*x = ShardAssignment{}
	mi := &file_rebalancer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShardAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardAssignment) ProtoMessage() {}

func (x *ShardAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_rebalancer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardAssignment.ProtoReflect.Descriptor instead.
func (*ShardAssignment) Descriptor() ([]byte, []int) {
	return file_rebalancer_proto_rawDescGZIP(), []int{2}
}

func (x *ShardAssignment) GetShardId() string {
	if x != nil {
		return x.ShardId
	}
	return ""
}

func (x *ShardAssignment) GetPrimaryOwner() string {
	if x != nil {
		return x.PrimaryOwner
	}
	return ""
}

func (x *ShardAssignment) GetReplicas() []string {
	if x != nil {
		return x.Replicas
	}
	return nil
}

func (x *ShardAssignment) GetVirtualShards() int32 {
	if x != nil {
		return x.VirtualShards
	}
	return 0
}

func (x *ShardAssignment) GetLoadScore() float64 {
	if x != nil {
		return x.LoadScore
	}
	return 0
}

func (x *ShardAssignment) GetState() ShardState {
	if x != nil {
		return x.State
	}
	return ShardState_ACTIVE
}

func (x *ShardAssignment) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type StreamShardUpdatesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespaces    []string               `protobuf:"bytes,1,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
	Tables        []string               `protobuf:"bytes,2,rep,name=tables,proto3" json:"tables,omitempty"`
	IntervalMs    int32                  `protobuf:"varint,3,opt,name=interval_ms,json=intervalMs,proto3" json:"interval_ms,omitempty"` // Min 100ms
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamShardUpdatesRequest) Reset() {
	*x = StreamShardUpdatesRequest{}
	mi := &file_rebalancer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamShardUpdatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamShardUpdatesRequest) ProtoMessage() {}

func (x *StreamShardUpdatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rebalancer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamShardUpdatesRequest.ProtoReflect.Descriptor instead.
func (*StreamShardUpdatesRequest) Descriptor() ([]byte, []int) {
	return file_rebalancer_proto_rawDescGZIP(), []int{3}
}

func (x *StreamShardUpdatesRequest) GetNamespaces() []string {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

func (x *StreamShardUpdatesRequest) GetTables() []string {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *StreamShardUpdatesRequest) GetIntervalMs() int32 {
	if x != nil {
		return x.IntervalMs
	}
	return 0
}

type ShardUpdate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Update:
	//
	//	*ShardUpdate_AssignmentChange
	//	*ShardUpdate_MigrationEvent
	//	*ShardUpdate_LoadAlert
	Update        isShardUpdate_Update   `protobuf_oneof:"update"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShardUpdate) Reset() {
	*x = ShardUpdate{}
	mi := &file_rebalancer_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShardUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardUpdate) ProtoMessage() {}

func (x *ShardUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_rebalancer_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardUpdate.ProtoReflect.Descriptor instead.
func (*ShardUpdate) Descriptor() ([]byte, []int) {
	return file_rebalancer_proto_rawDescGZIP(), []int{4}
}

func (x *ShardUpdate) GetUpdate() isShardUpdate_Update {
	if x != nil {
		return x.Update
	}
	return nil
}

func (x *ShardUpdate) GetAssignmentChange() *ShardAssignment {
	if x != nil {
		if x, ok := x.Update.(*ShardUpdate_AssignmentChange); ok {
			return x.AssignmentChange
		}
	}
	return nil
}

func (x *ShardUpdate) GetMigrationEvent() *ShardMigration {
	if x != nil {
		if x, ok := x.Update.(*ShardUpdate_MigrationEvent); ok {
			return x.MigrationEvent
		}
	}
	return nil
}

func (x *ShardUpdate) GetLoadAlert() *LoadAlert {
	if x != nil {
		if x, ok := x.Update.(*ShardUpdate_LoadAlert); ok {
			return x.LoadAlert
		}
	}
	return nil
}

func (x *ShardUpdate) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type isShardUpdate_Update interface {
	isShardUpdate_Update()
}

type ShardUpdate_AssignmentChange struct {
	AssignmentChange *ShardAssignment `protobuf:"bytes,1,opt,name=assignment_change,json=assignmentChange,proto3,oneof"`
}

type ShardUpdate_MigrationEvent struct {
	MigrationEvent *ShardMigration `protobuf:"bytes,2,opt,name=migration_event,json=migrationEvent,proto3,oneof"`
}

type ShardUpdate_LoadAlert struct {
	LoadAlert *LoadAlert `protobuf:"bytes,3,opt,name=load_alert,json=loadAlert,proto3,oneof"`
}

func (*ShardUpdate_AssignmentChange) isShardUpdate_Update() {}

func (*ShardUpdate_MigrationEvent) isShardUpdate_Update() {}

func (*ShardUpdate_LoadAlert) isShardUpdate_Update() {}

type ShardMigration struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShardId       string                 `protobuf:"bytes,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	FromNode      string                 `protobuf:"bytes,2,opt,name=from_node,json=fromNode,proto3" json:"from_node,omitempty"`
	ToNode        string                 `protobuf:"bytes,3,opt,name=to_node,json=toNode,proto3" json:"to_node,omitempty"`
	Reason        MigrationReason        `protobuf:"varint,4,opt,name=reason,proto3,enum=truenow.rebalancer.MigrationReason" json:"reason,omitempty"`
	Progress      float64                `protobuf:"fixed64,5,opt,name=progress,proto3" json:"progress,omitempty"` // 0-1
	StartedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShardMigration) Reset() {
	*x = ShardMigration{}
	mi := &file_rebalancer_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShardMigration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardMigration) ProtoMessage() {}

func (x *ShardMigration) ProtoReflect() protoreflect.Message {
	mi := &file_rebalancer_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardMigration.ProtoReflect.Descriptor instead.
func (*ShardMigration) Descriptor() ([]byte, []int) {
	return file_rebalancer_proto_rawDescGZIP(), []int{5}
}

func (x *ShardMigration) GetShardId() string {
	if x != nil {
		return x.ShardId
	}
	return ""
}

func (x *ShardMigration) GetFromNode() string {
	if x != nil {
		return x.FromNode
	}
	return ""
}

func (x *ShardMigration) GetToNode() string {
	if x != nil {
		return x.ToNode
	}
	return ""
}

func (x *ShardMigration) GetReason() MigrationReason {
	if x != nil {
		return x.Reason
	}
	return MigrationReason_HOTSPOT_MITIGATION
}

func (x *ShardMigration) GetProgress() float64 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *ShardMigration) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

type LoadAlert struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Type          AlertType              `protobuf:"varint,2,opt,name=type,proto3,enum=truenow.rebalancer.AlertType" json:"type,omitempty"`
	CurrentLoad   float64                `protobuf:"fixed64,3,opt,name=current_load,json=currentLoad,proto3" json:"current_load,omitempty"`
	Threshold     float64                `protobuf:"fixed64,4,opt,name=threshold,proto3" json:"threshold,omitempty"`
	Message       string                 `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadAlert) Reset() {
	*x = LoadAlert{}
	mi := &file_rebalancer_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadAlert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadAlert) ProtoMessage() {}

func (x *LoadAlert) ProtoReflect() protoreflect.Message {
	mi := &file_rebalancer_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadAlert.ProtoReflect.Descriptor instead.
func (*LoadAlert) Descriptor() ([]byte, []int) {
	return file_rebalancer_proto_rawDescGZIP(), []int{6}
}

func (x *LoadAlert) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *LoadAlert) GetType() AlertType {
	if x != nil {
		return x.Type
	}
	return AlertType_HIGH_LOAD
}

func (x *LoadAlert) GetCurrentLoad() float64 {
	if x != nil {
		return x.CurrentLoad
	}
	return 0
}

func (x *LoadAlert) GetThreshold() float64 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *LoadAlert) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetLoadDistributionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Table         string                 `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLoadDistributionRequest) Reset() {
	*x = GetLoadDistributionRequest{}
	mi := &file_rebalancer_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLoadDistributionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLoadDistributionRequest) ProtoMessage() {}

func (x *GetLoadDistributionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rebalancer_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLoadDistributionRequest.ProtoReflect.Descriptor instead.
func (*GetLoadDistributionRequest) Descriptor() ([]byte, []int) {
	return file_rebalancer_proto_rawDescGZIP(), []int{7}
}

func (x *GetLoadDistributionRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetLoadDistributionRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

type LoadDistributionResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	NodeLoads          map[string]*NodeLoad   `protobuf:"bytes,1,rep,name=node_loads,json=nodeLoads,proto3" json:"node_loads,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // key: node_id
	GiniCoefficient    float64                `protobuf:"fixed64,2,opt,name=gini_coefficient,json=giniCoefficient,proto3" json:"gini_coefficient,omitempty"`                                                       // 0=perfect equality, 1=perfect inequality
	P50Load            float64                `protobuf:"fixed64,3,opt,name=p50_load,json=p50Load,proto3" json:"p50_load,omitempty"`
	P95Load            float64                `protobuf:"fixed64,4,opt,name=p95_load,json=p95Load,proto3" json:"p95_load,omitempty"`
	P99Load            float64                `protobuf:"fixed64,5,opt,name=p99_load,json=p99Load,proto3" json:"p99_load,omitempty"`
	TotalShards        int32                  `protobuf:"varint,6,opt,name=total_shards,json=totalShards,proto3" json:"total_shards,omitempty"`
	TotalVirtualShards int32                  `protobuf:"varint,7,opt,name=total_virtual_shards,json=totalVirtualShards,proto3" json:"total_virtual_shards,omitempty"`
	CalculatedAt       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=calculated_at,json=calculatedAt,proto3" json:"calculated_at,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *LoadDistributionResponse) Reset() {
	*x = LoadDistributionResponse{}
	mi := &file_rebalancer_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadDistributionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadDistributionResponse) ProtoMessage() {}

func (x *LoadDistributionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rebalancer_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadDistributionResponse.ProtoReflect.Descriptor instead.
func (*LoadDistributionResponse) Descriptor() ([]byte, []int) {
	return file_rebalancer_proto_rawDescGZIP(), []int{8}
}

func (x *LoadDistributionResponse) GetNodeLoads() map[string]*NodeLoad {
	if x != nil {
		return x.NodeLoads
	}
	return nil
}

func (x *LoadDistributionResponse) GetGiniCoefficient() float64 {
	if x != nil {
		return x.GiniCoefficient
	}
	return 0
}

func (x *LoadDistributionResponse) GetP50Load() float64 {
	if x != nil {
		return x.P50Load
	}
	return 0
}

func (x *LoadDistributionResponse) GetP95Load() float64 {
	if x != nil {
		return x.P95Load
	}
	return 0
}

func (x *LoadDistributionResponse) GetP99Load() float64 {
	if x != nil {
		return x.P99Load
	}
	return 0
}

func (x *LoadDistributionResponse) GetTotalShards() int32 {
	if x != nil {
		return x.TotalShards
	}
	return 0
}

func (x *LoadDistributionResponse) GetTotalVirtualShards() int32 {
	if x != nil {
		return x.TotalVirtualShards
	}
	return 0
}

func (x *LoadDistributionResponse) GetCalculatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CalculatedAt
	}
	return nil
}

type NodeLoad struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	NodeId            string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	CpuUsage          float64                `protobuf:"fixed64,2,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`          // 0-100
	MemoryUsage       float64                `protobuf:"fixed64,3,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"` // 0-100
	RequestRate       float64                `protobuf:"fixed64,4,opt,name=request_rate,json=requestRate,proto3" json:"request_rate,omitempty"` // requests per second
	ShardCount        int32                  `protobuf:"varint,5,opt,name=shard_count,json=shardCount,proto3" json:"shard_count,omitempty"`
	VirtualShardCount int32                  `protobuf:"varint,6,opt,name=virtual_shard_count,json=virtualShardCount,proto3" json:"virtual_shard_count,omitempty"`
	HotKeys           []string               `protobuf:"bytes,7,rep,name=hot_keys,json=hotKeys,proto3" json:"hot_keys,omitempty"` // Top hot keys on this node
	LastReport        *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=last_report,json=lastReport,proto3" json:"last_report,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *NodeLoad) Reset() {
	*x = NodeLoad{}
	mi := &file_rebalancer_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeLoad) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeLoad) ProtoMessage() {}

func (x *NodeLoad) ProtoReflect() protoreflect.Message {
	mi := &file_rebalancer_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeLoad.ProtoReflect.Descriptor instead.
func (*NodeLoad) Descriptor() ([]byte, []int) {
	return file_rebalancer_proto_rawDescGZIP(), []int{9}
}

func (x *NodeLoad) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *NodeLoad) GetCpuUsage() float64 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *NodeLoad) GetMemoryUsage() float64 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

func (x *NodeLoad) GetRequestRate() float64 {
	if x != nil {
		return x.RequestRate
	}
	return 0
}

func (x *NodeLoad) GetShardCount() int32 {
	if x != nil {
		return x.ShardCount
	}
	return 0
}

func (x *NodeLoad) GetVirtualShardCount() int32 {
	if x != nil {
		return x.VirtualShardCount
	}
	return 0
}

func (x *NodeLoad) GetHotKeys() []string {
	if x != nil {
		return x.HotKeys
	}
	return nil
}

func (x *NodeLoad) GetLastReport() *timestamppb.Timestamp {
	if x != nil {
		return x.LastReport
	}
	return nil
}

type BatchReportLoadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reports       []*LoadReport          `protobuf:"bytes,1,rep,name=reports,proto3" json:"reports,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchReportLoadRequest) Reset() {
	*x = BatchReportLoadRequest{}
	mi := &file_rebalancer_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchReportLoadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchReportLoadRequest) ProtoMessage() {}

func (x *BatchReportLoadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rebalancer_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchReportLoadRequest.ProtoReflect.Descriptor instead.
func (*BatchReportLoadRequest) Descriptor() ([]byte, []int) {
	return file_rebalancer_proto_rawDescGZIP(), []int{10}
}

func (x *BatchReportLoadRequest) GetReports() []*LoadReport {
	if x != nil {
		return x.Reports
	}
	return nil
}

type LoadReport struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NodeId         string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	ShardId        string                 `protobuf:"bytes,2,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	CpuUsage       float64                `protobuf:"fixed64,3,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	MemoryUsage    float64                `protobuf:"fixed64,4,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`
	RequestRate    float64                `protobuf:"fixed64,5,opt,name=request_rate,json=requestRate,proto3" json:"request_rate,omitempty"`
	KeyFrequencies map[string]int64       `protobuf:"bytes,6,rep,name=key_frequencies,json=keyFrequencies,proto3" json:"key_frequencies,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // For hotspot detection
	Timestamp      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *LoadReport) Reset() {
	*x = LoadReport{}
	mi := &file_rebalancer_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadReport) ProtoMessage() {}

func (x *LoadReport) ProtoReflect() protoreflect.Message {
	mi := &file_rebalancer_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadReport.ProtoReflect.Descriptor instead.
func (*LoadReport) Descriptor() ([]byte, []int) {
	return file_rebalancer_proto_rawDescGZIP(), []int{11}
}

func (x *LoadReport) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *LoadReport) GetShardId() string {
	if x != nil {
		return x.ShardId
	}
	return ""
}

func (x *LoadReport) GetCpuUsage() float64 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *LoadReport) GetMemoryUsage() float64 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

func (x *LoadReport) GetRequestRate() float64 {
	if x != nil {
		return x.RequestRate
	}
	return 0
}

func (x *LoadReport) GetKeyFrequencies() map[string]int64 {
	if x != nil {
		return x.KeyFrequencies
	}
	return nil
}

func (x *LoadReport) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type BatchReportLoadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Accepted      int32                  `protobuf:"varint,1,opt,name=accepted,proto3" json:"accepted,omitempty"`
	Rejected      int32                  `protobuf:"varint,2,opt,name=rejected,proto3" json:"rejected,omitempty"`
	Errors        []string               `protobuf:"bytes,3,rep,name=errors,proto3" json:"errors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchReportLoadResponse) Reset() {
	*x = BatchReportLoadResponse{}
	mi := &file_rebalancer_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchReportLoadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchReportLoadResponse) ProtoMessage() {}

func (x *BatchReportLoadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rebalancer_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchReportLoadResponse.ProtoReflect.Descriptor instead.
func (*BatchReportLoadResponse) Descriptor() ([]byte, []int) {
	return file_rebalancer_proto_rawDescGZIP(), []int{12}
}

func (x *BatchReportLoadResponse) GetAccepted() int32 {
	if x != nil {
		return x.Accepted
	}
	return 0
}

func (x *BatchReportLoadResponse) GetRejected() int32 {
	if x != nil {
		return x.Rejected
	}
	return 0
}

func (x *BatchReportLoadResponse) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

type GetHotspotsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Threshold     float64                `protobuf:"fixed64,1,opt,name=threshold,proto3" json:"threshold,omitempty"` // Load threshold for hotspot detection
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`          // Max hotspots to return
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHotspotsRequest) Reset() {
	*x = GetHotspotsRequest{}
	mi := &file_rebalancer_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHotspotsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHotspotsRequest) ProtoMessage() {}

func (x *GetHotspotsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rebalancer_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHotspotsRequest.ProtoReflect.Descriptor instead.
func (*GetHotspotsRequest) Descriptor() ([]byte, []int) {
	return file_rebalancer_proto_rawDescGZIP(), []int{13}
}

func (x *GetHotspotsRequest) GetThreshold() float64 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *GetHotspotsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type HotspotsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hotspots      []*Hotspot             `protobuf:"bytes,1,rep,name=hotspots,proto3" json:"hotspots,omitempty"`
	AvgLoad       float64                `protobuf:"fixed64,2,opt,name=avg_load,json=avgLoad,proto3" json:"avg_load,omitempty"`
	DetectedAt    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=detected_at,json=detectedAt,proto3" json:"detected_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HotspotsResponse) Reset() {
	*x = HotspotsResponse{}
	mi := &file_rebalancer_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HotspotsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HotspotsResponse) ProtoMessage() {}

func (x *HotspotsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rebalancer_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HotspotsResponse.ProtoReflect.Descriptor instead.
func (*HotspotsResponse) Descriptor() ([]byte, []int) {
	return file_rebalancer_proto_rawDescGZIP(), []int{14}
}

func (x *HotspotsResponse) GetHotspots() []*Hotspot {
	if x != nil {
		return x.Hotspots
	}
	return nil
}

func (x *HotspotsResponse) GetAvgLoad() float64 {
	if x != nil {
		return x.AvgLoad
	}
	return 0
}

func (x *HotspotsResponse) GetDetectedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DetectedAt
	}
	return nil
}

type Hotspot struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	NodeId            string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	ShardId           string                 `protobuf:"bytes,2,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	LoadScore         float64                `protobuf:"fixed64,3,opt,name=load_score,json=loadScore,proto3" json:"load_score,omitempty"`
	DeviationFromMean float64                `protobuf:"fixed64,4,opt,name=deviation_from_mean,json=deviationFromMean,proto3" json:"deviation_from_mean,omitempty"` // How many std devs from mean
	HotKeys           []string               `protobuf:"bytes,5,rep,name=hot_keys,json=hotKeys,proto3" json:"hot_keys,omitempty"`
	SuggestedStrategy MitigationStrategy     `protobuf:"varint,6,opt,name=suggested_strategy,json=suggestedStrategy,proto3,enum=truenow.rebalancer.MitigationStrategy" json:"suggested_strategy,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Hotspot) Reset() {
	*x = Hotspot{}
	mi := &file_rebalancer_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Hotspot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hotspot) ProtoMessage() {}

func (x *Hotspot) ProtoReflect() protoreflect.Message {
	mi := &file_rebalancer_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hotspot.ProtoReflect.Descriptor instead.
func (*Hotspot) Descriptor() ([]byte, []int) {
	return file_rebalancer_proto_rawDescGZIP(), []int{15}
}

func (x *Hotspot) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *Hotspot) GetShardId() string {
	if x != nil {
		return x.ShardId
	}
	return ""
}

func (x *Hotspot) GetLoadScore() float64 {
	if x != nil {
		return x.LoadScore
	}
	return 0
}

func (x *Hotspot) GetDeviationFromMean() float64 {
	if x != nil {
		return x.DeviationFromMean
	}
	return 0
}

func (x *Hotspot) GetHotKeys() []string {
	if x != nil {
		return x.HotKeys
	}
	return nil
}

func (x *Hotspot) GetSuggestedStrategy() MitigationStrategy {
	if x != nil {
		return x.SuggestedStrategy
	}
	return MitigationStrategy_NONE
}

type TriggerRebalanceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reason        string                 `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	Strategy      RebalanceStrategy      `protobuf:"varint,2,opt,name=strategy,proto3,enum=truenow.rebalancer.RebalanceStrategy" json:"strategy,omitempty"`
	Parameters    map[string]string      `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TriggerRebalanceRequest) Reset() {
	*x = TriggerRebalanceRequest{}
	mi := &file_rebalancer_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerRebalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerRebalanceRequest) ProtoMessage() {}

func (x *TriggerRebalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rebalancer_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerRebalanceRequest.ProtoReflect.Descriptor instead.
func (*TriggerRebalanceRequest) Descriptor() ([]byte, []int) {
	return file_rebalancer_proto_rawDescGZIP(), []int{16}
}

func (x *TriggerRebalanceRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *TriggerRebalanceRequest) GetStrategy() RebalanceStrategy {
	if x != nil {
		return x.Strategy
	}
	return RebalanceStrategy_AUTOMATIC
}

func (x *TriggerRebalanceRequest) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type TriggerRebalanceResponse struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	Success                  bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	RebalanceId              string                 `protobuf:"bytes,2,opt,name=rebalance_id,json=rebalanceId,proto3" json:"rebalance_id,omitempty"`
	ShardsToMove             int32                  `protobuf:"varint,3,opt,name=shards_to_move,json=shardsToMove,proto3" json:"shards_to_move,omitempty"`
	EstimatedDurationSeconds float64                `protobuf:"fixed64,4,opt,name=estimated_duration_seconds,json=estimatedDurationSeconds,proto3" json:"estimated_duration_seconds,omitempty"`
	Message                  string                 `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *TriggerRebalanceResponse) Reset() {
	*x = TriggerRebalanceResponse{}
	mi := &file_rebalancer_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerRebalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerRebalanceResponse) ProtoMessage() {}

func (x *TriggerRebalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rebalancer_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerRebalanceResponse.ProtoReflect.Descriptor instead.
func (*TriggerRebalanceResponse) Descriptor() ([]byte, []int) {
	return file_rebalancer_proto_rawDescGZIP(), []int{17}
}

func (x *TriggerRebalanceResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TriggerRebalanceResponse) GetRebalanceId() string {
	if x != nil {
		return x.RebalanceId
	}
	return ""
}

func (x *TriggerRebalanceResponse) GetShardsToMove() int32 {
	if x != nil {
		return x.ShardsToMove
	}
	return 0
}

func (x *TriggerRebalanceResponse) GetEstimatedDurationSeconds() float64 {
	if x != nil {
		return x.EstimatedDurationSeconds
	}
	return 0
}

func (x *TriggerRebalanceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetRebalanceHistoryRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Limit          int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	SinceTimestamp int64                  `protobuf:"varint,2,opt,name=since_timestamp,json=sinceTimestamp,proto3" json:"since_timestamp,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetRebalanceHistoryRequest) Reset() {
	*x = GetRebalanceHistoryRequest{}
	mi := &file_rebalancer_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRebalanceHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRebalanceHistoryRequest) ProtoMessage() {}

func (x *GetRebalanceHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rebalancer_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRebalanceHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetRebalanceHistoryRequest) Descriptor() ([]byte, []int) {
	return file_rebalancer_proto_rawDescGZIP(), []int{18}
}

func (x *GetRebalanceHistoryRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetRebalanceHistoryRequest) GetSinceTimestamp() int64 {
	if x != nil {
		return x.SinceTimestamp
	}
	return 0
}

type RebalanceHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*RebalanceEvent      `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RebalanceHistoryResponse) Reset() {
	*x = RebalanceHistoryResponse{}
	mi := &file_rebalancer_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RebalanceHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebalanceHistoryResponse) ProtoMessage() {}

func (x *RebalanceHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rebalancer_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebalanceHistoryResponse.ProtoReflect.Descriptor instead.
func (*RebalanceHistoryResponse) Descriptor() ([]byte, []int) {
	return file_rebalancer_proto_rawDescGZIP(), []int{19}
}

func (x *RebalanceHistoryResponse) GetEvents() []*RebalanceEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type RebalanceEvent struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RebalanceId     string                 `protobuf:"bytes,1,opt,name=rebalance_id,json=rebalanceId,proto3" json:"rebalance_id,omitempty"`
	Strategy        RebalanceStrategy      `protobuf:"varint,2,opt,name=strategy,proto3,enum=truenow.rebalancer.RebalanceStrategy" json:"strategy,omitempty"`
	TriggerReason   string                 `protobuf:"bytes,3,opt,name=trigger_reason,json=triggerReason,proto3" json:"trigger_reason,omitempty"`
	ShardsMoved     int32                  `protobuf:"varint,4,opt,name=shards_moved,json=shardsMoved,proto3" json:"shards_moved,omitempty"`
	DurationSeconds float64                `protobuf:"fixed64,5,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"`
	GiniBefore      float64                `protobuf:"fixed64,6,opt,name=gini_before,json=giniBefore,proto3" json:"gini_before,omitempty"`
	GiniAfter       float64                `protobuf:"fixed64,7,opt,name=gini_after,json=giniAfter,proto3" json:"gini_after,omitempty"`
	Success         bool                   `protobuf:"varint,8,opt,name=success,proto3" json:"success,omitempty"`
	StartedAt       *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	CompletedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RebalanceEvent) Reset() {
	*x = RebalanceEvent{}
	mi := &file_rebalancer_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RebalanceEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebalanceEvent) ProtoMessage() {}

func (x *RebalanceEvent) ProtoReflect() protoreflect.Message {
	mi := &file_rebalancer_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebalanceEvent.ProtoReflect.Descriptor instead.
func (*RebalanceEvent) Descriptor() ([]byte, []int) {
	return file_rebalancer_proto_rawDescGZIP(), []int{20}
}

func (x *RebalanceEvent) GetRebalanceId() string {
	if x != nil {
		return x.RebalanceId
	}
	return ""
}

func (x *RebalanceEvent) GetStrategy() RebalanceStrategy {
	if x != nil {
		return x.Strategy
	}
	return RebalanceStrategy_AUTOMATIC
}

func (x *RebalanceEvent) GetTriggerReason() string {
	if x != nil {
		return x.TriggerReason
	}
	return ""
}

func (x *RebalanceEvent) GetShardsMoved() int32 {
	if x != nil {
		return x.ShardsMoved
	}
	return 0
}

func (x *RebalanceEvent) GetDurationSeconds() float64 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

func (x *RebalanceEvent) GetGiniBefore() float64 {
	if x != nil {
		return x.GiniBefore
	}
	return 0
}

func (x *RebalanceEvent) GetGiniAfter() float64 {
	if x != nil {
		return x.GiniAfter
	}
	return 0
}

func (x *RebalanceEvent) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RebalanceEvent) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *RebalanceEvent) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

var File_rebalancer_proto protoreflect.FileDescriptor

const file_rebalancer_proto_rawDesc = "" +
	"\n" +
	"\x10rebalancer.proto\x12\x12truenow.rebalancer\x1a\x1fgoogle/protobuf/timestamp.proto\"l\n" +
	"\x1aGetShardAssignmentsRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x14\n" +
	"\x05table\x18\x02 \x01(\tR\x05table\x12\x1a\n" +
	"\bservices\x18\x03 \x03(\tR\bservices\"\xc2\x02\n" +
	"\x18ShardAssignmentsResponse\x12_\n" +
	"\vassignments\x18\x01 \x03(\v2=.truenow.rebalancer.ShardAssignmentsResponse.AssignmentsEntryR\vassignments\x12#\n" +
	"\rcurrent_epoch\x18\x02 \x01(\x03R\fcurrentEpoch\x12;\n" +
	"\vlast_update\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"lastUpdate\x1ac\n" +
	"\x10AssignmentsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x129\n" +
	"\x05value\x18\x02 \x01(\v2#.truenow.rebalancer.ShardAssignmentR\x05value:\x028\x01\"\xf5\x02\n" +
	"\x0fShardAssignment\x12\x19\n" +
	"\bshard_id\x18\x01 \x01(\tR\ashardId\x12#\n" +
	"\rprimary_owner\x18\x02 \x01(\tR\fprimaryOwner\x12\x1a\n" +
	"\breplicas\x18\x03 \x03(\tR\breplicas\x12%\n" +
	"\x0evirtual_shards\x18\x04 \x01(\x05R\rvirtualShards\x12\x1d\n" +
	"\n" +
	"load_score\x18\x05 \x01(\x01R\tloadScore\x124\n" +
	"\x05state\x18\x06 \x01(\x0e2\x1e.truenow.rebalancer.ShardStateR\x05state\x12M\n" +
	"\bmetadata\x18\a \x03(\v21.truenow.rebalancer.ShardAssignment.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"t\n" +
	"\x19StreamShardUpdatesRequest\x12\x1e\n" +
	"\n" +
	"namespaces\x18\x01 \x03(\tR\n" +
	"namespaces\x12\x16\n" +
	"\x06tables\x18\x02 \x03(\tR\x06tables\x12\x1f\n" +
	"\vinterval_ms\x18\x03 \x01(\x05R\n" +
	"intervalMs\"\xb4\x02\n" +
	"\vShardUpdate\x12R\n" +
	"\x11assignment_change\x18\x01 \x01(\v2#.truenow.rebalancer.ShardAssignmentH\x00R\x10assignmentChange\x12M\n" +
	"\x0fmigration_event\x18\x02 \x01(\v2\".truenow.rebalancer.ShardMigrationH\x00R\x0emigrationEvent\x12>\n" +
	"\n" +
	"load_alert\x18\x03 \x01(\v2\x1d.truenow.rebalancer.LoadAlertH\x00R\tloadAlert\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestampB\b\n" +
	"\x06update\"\xf5\x01\n" +
	"\x0eShardMigration\x12\x19\n" +
	"\bshard_id\x18\x01 \x01(\tR\ashardId\x12\x1b\n" +
	"\tfrom_node\x18\x02 \x01(\tR\bfromNode\x12\x17\n" +
	"\ato_node\x18\x03 \x01(\tR\x06toNode\x12;\n" +
	"\x06reason\x18\x04 \x01(\x0e2#.truenow.rebalancer.MigrationReasonR\x06reason\x12\x1a\n" +
	"\bprogress\x18\x05 \x01(\x01R\bprogress\x129\n" +
	"\n" +
	"started_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\"\xb2\x01\n" +
	"\tLoadAlert\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x121\n" +
	"\x04type\x18\x02 \x01(\x0e2\x1d.truenow.rebalancer.AlertTypeR\x04type\x12!\n" +
	"\fcurrent_load\x18\x03 \x01(\x01R\vcurrentLoad\x12\x1c\n" +
	"\tthreshold\x18\x04 \x01(\x01R\tthreshold\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessage\"P\n" +
	"\x1aGetLoadDistributionRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x14\n" +
	"\x05table\x18\x02 \x01(\tR\x05table\"\xe4\x03\n" +
	"\x18LoadDistributionResponse\x12Z\n" +
	"\n" +
	"node_loads\x18\x01 \x03(\v2;.truenow.rebalancer.LoadDistributionResponse.NodeLoadsEntryR\tnodeLoads\x12)\n" +
	"\x10gini_coefficient\x18\x02 \x01(\x01R\x0fginiCoefficient\x12\x19\n" +
	"\bp50_load\x18\x03 \x01(\x01R\ap50Load\x12\x19\n" +
	"\bp95_load\x18\x04 \x01(\x01R\ap95Load\x12\x19\n" +
	"\bp99_load\x18\x05 \x01(\x01R\ap99Load\x12!\n" +
	"\ftotal_shards\x18\x06 \x01(\x05R\vtotalShards\x120\n" +
	"\x14total_virtual_shards\x18\a \x01(\x05R\x12totalVirtualShards\x12?\n" +
	"\rcalculated_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\fcalculatedAt\x1aZ\n" +
	"\x0eNodeLoadsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.truenow.rebalancer.NodeLoadR\x05value:\x028\x01\"\xaf\x02\n" +
	"\bNodeLoad\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x1b\n" +
	"\tcpu_usage\x18\x02 \x01(\x01R\bcpuUsage\x12!\n" +
	"\fmemory_usage\x18\x03 \x01(\x01R\vmemoryUsage\x12!\n" +
	"\frequest_rate\x18\x04 \x01(\x01R\vrequestRate\x12\x1f\n" +
	"\vshard_count\x18\x05 \x01(\x05R\n" +
	"shardCount\x12.\n" +
	"\x13virtual_shard_count\x18\x06 \x01(\x05R\x11virtualShardCount\x12\x19\n" +
	"\bhot_keys\x18\a \x03(\tR\ahotKeys\x12;\n" +
	"\vlast_report\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"lastReport\"R\n" +
	"\x16BatchReportLoadRequest\x128\n" +
	"\areports\x18\x01 \x03(\v2\x1e.truenow.rebalancer.LoadReportR\areports\"\xfd\x02\n" +
	"\n" +
	"LoadReport\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x19\n" +
	"\bshard_id\x18\x02 \x01(\tR\ashardId\x12\x1b\n" +
	"\tcpu_usage\x18\x03 \x01(\x01R\bcpuUsage\x12!\n" +
	"\fmemory_usage\x18\x04 \x01(\x01R\vmemoryUsage\x12!\n" +
	"\frequest_rate\x18\x05 \x01(\x01R\vrequestRate\x12[\n" +
	"\x0fkey_frequencies\x18\x06 \x03(\v22.truenow.rebalancer.LoadReport.KeyFrequenciesEntryR\x0ekeyFrequencies\x128\n" +
	"\ttimestamp\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x1aA\n" +
	"\x13KeyFrequenciesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\"i\n" +
	"\x17BatchReportLoadResponse\x12\x1a\n" +
	"\baccepted\x18\x01 \x01(\x05R\baccepted\x12\x1a\n" +
	"\brejected\x18\x02 \x01(\x05R\brejected\x12\x16\n" +
	"\x06errors\x18\x03 \x03(\tR\x06errors\"H\n" +
	"\x12GetHotspotsRequest\x12\x1c\n" +
	"\tthreshold\x18\x01 \x01(\x01R\tthreshold\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\"\xa3\x01\n" +
	"\x10HotspotsResponse\x127\n" +
	"\bhotspots\x18\x01 \x03(\v2\x1b.truenow.rebalancer.HotspotR\bhotspots\x12\x19\n" +
	"\bavg_load\x18\x02 \x01(\x01R\aavgLoad\x12;\n" +
	"\vdetected_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"detectedAt\"\xfe\x01\n" +
	"\aHotspot\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x19\n" +
	"\bshard_id\x18\x02 \x01(\tR\ashardId\x12\x1d\n" +
	"\n" +
	"load_score\x18\x03 \x01(\x01R\tloadScore\x12.\n" +
	"\x13deviation_from_mean\x18\x04 \x01(\x01R\x11deviationFromMean\x12\x19\n" +
	"\bhot_keys\x18\x05 \x03(\tR\ahotKeys\x12U\n" +
	"\x12suggested_strategy\x18\x06 \x01(\x0e2&.truenow.rebalancer.MitigationStrategyR\x11suggestedStrategy\"\x90\x02\n" +
	"\x17TriggerRebalanceRequest\x12\x16\n" +
	"\x06reason\x18\x01 \x01(\tR\x06reason\x12A\n" +
	"\bstrategy\x18\x02 \x01(\x0e2%.truenow.rebalancer.RebalanceStrategyR\bstrategy\x12[\n" +
	"\n" +
	"parameters\x18\x03 \x03(\v2;.truenow.rebalancer.TriggerRebalanceRequest.ParametersEntryR\n" +
	"parameters\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd5\x01\n" +
	"\x18TriggerRebalanceResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\frebalance_id\x18\x02 \x01(\tR\vrebalanceId\x12$\n" +
	"\x0eshards_to_move\x18\x03 \x01(\x05R\fshardsToMove\x12<\n" +
	"\x1aestimated_duration_seconds\x18\x04 \x01(\x01R\x18estimatedDurationSeconds\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessage\"[\n" +
	"\x1aGetRebalanceHistoryRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12'\n" +
	"\x0fsince_timestamp\x18\x02 \x01(\x03R\x0esinceTimestamp\"V\n" +
	"\x18RebalanceHistoryResponse\x12:\n" +
	"\x06events\x18\x01 \x03(\v2\".truenow.rebalancer.RebalanceEventR\x06events\"\xbf\x03\n" +
	"\x0eRebalanceEvent\x12!\n" +
	"\frebalance_id\x18\x01 \x01(\tR\vrebalanceId\x12A\n" +
	"\bstrategy\x18\x02 \x01(\x0e2%.truenow.rebalancer.RebalanceStrategyR\bstrategy\x12%\n" +
	"\x0etrigger_reason\x18\x03 \x01(\tR\rtriggerReason\x12!\n" +
	"\fshards_moved\x18\x04 \x01(\x05R\vshardsMoved\x12)\n" +
	"\x10duration_seconds\x18\x05 \x01(\x01R\x0fdurationSeconds\x12\x1f\n" +
	"\vgini_before\x18\x06 \x01(\x01R\n" +
	"giniBefore\x12\x1d\n" +
	"\n" +
	"gini_after\x18\a \x01(\x01R\tginiAfter\x12\x18\n" +
	"\asuccess\x18\b \x01(\bR\asuccess\x129\n" +
	"\n" +
	"started_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12=\n" +
	"\fcompleted_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt*Q\n" +
	"\n" +
	"ShardState\x12\n" +
	"\n" +
	"\x06ACTIVE\x10\x00\x12\r\n" +
	"\tMIGRATING\x10\x01\x12\r\n" +
	"\tSPLITTING\x10\x02\x12\v\n" +
	"\aMERGING\x10\x03\x12\f\n" +
	"\bINACTIVE\x10\x04*o\n" +
	"\x0fMigrationReason\x12\x16\n" +
	"\x12HOTSPOT_MITIGATION\x10\x00\x12\x10\n" +
	"\fNODE_FAILURE\x10\x01\x12\f\n" +
	"\bSCALE_UP\x10\x02\x12\x0e\n" +
	"\n" +
	"SCALE_DOWN\x10\x03\x12\x14\n" +
	"\x10MANUAL_REBALANCE\x10\x04*_\n" +
	"\tAlertType\x12\r\n" +
	"\tHIGH_LOAD\x10\x00\x12\x17\n" +
	"\x13UNEVEN_DISTRIBUTION\x10\x01\x12\x14\n" +
	"\x10HOTSPOT_DETECTED\x10\x02\x12\x14\n" +
	"\x10CAPACITY_WARNING\x10\x03*w\n" +
	"\x12MitigationStrategy\x12\b\n" +
	"\x04NONE\x10\x00\x12\x0f\n" +
	"\vSPLIT_SHARD\x10\x01\x12\x11\n" +
	"\rMIGRATE_SHARD\x10\x02\x12\x0f\n" +
	"\vADD_REPLICA\x10\x03\x12\x0e\n" +
	"\n" +
	"RATE_LIMIT\x10\x04\x12\x12\n" +
	"\x0eCACHE_HOT_KEYS\x10\x05*i\n" +
	"\x11RebalanceStrategy\x12\r\n" +
	"\tAUTOMATIC\x10\x00\x12\x15\n" +
	"\x11MINIMIZE_MOVEMENT\x10\x01\x12\x19\n" +
	"\x15OPTIMIZE_DISTRIBUTION\x10\x02\x12\x13\n" +
	"\x0fHOTSPOT_FOCUSED\x10\x032\x92\x06\n" +
	"\x11RebalancerService\x12s\n" +
	"\x13GetShardAssignments\x12..truenow.rebalancer.GetShardAssignmentsRequest\x1a,.truenow.rebalancer.ShardAssignmentsResponse\x12f\n" +
	"\x12StreamShardUpdates\x12-.truenow.rebalancer.StreamShardUpdatesRequest\x1a\x1f.truenow.rebalancer.ShardUpdate0\x01\x12s\n" +
	"\x13GetLoadDistribution\x12..truenow.rebalancer.GetLoadDistributionRequest\x1a,.truenow.rebalancer.LoadDistributionResponse\x12j\n" +
	"\x0fBatchReportLoad\x12*.truenow.rebalancer.BatchReportLoadRequest\x1a+.truenow.rebalancer.BatchReportLoadResponse\x12[\n" +
	"\vGetHotspots\x12&.truenow.rebalancer.GetHotspotsRequest\x1a$.truenow.rebalancer.HotspotsResponse\x12m\n" +
	"\x10TriggerRebalance\x12+.truenow.rebalancer.TriggerRebalanceRequest\x1a,.truenow.rebalancer.TriggerRebalanceResponse\x12s\n" +
	"\x13GetRebalanceHistory\x12..truenow.rebalancer.GetRebalanceHistoryRequest\x1a,.truenow.rebalancer.RebalanceHistoryResponseB>Z<github.com/Milad-Afdasta/TrueNow/proto/rebalancer;rebalancerb\x06proto3"

var (
	file_rebalancer_proto_rawDescOnce sync.Once
	file_rebalancer_proto_rawDescData []byte
)

func file_rebalancer_proto_rawDescGZIP() []byte {
	file_rebalancer_proto_rawDescOnce.Do(func() {
		file_rebalancer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_rebalancer_proto_rawDesc), len(file_rebalancer_proto_rawDesc)))
	})
	return file_rebalancer_proto_rawDescData
}

var file_rebalancer_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_rebalancer_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_rebalancer_proto_goTypes = []any{
	(ShardState)(0),                    // 0: truenow.rebalancer.ShardState
	(MigrationReason)(0),               // 1: truenow.rebalancer.MigrationReason
	(AlertType)(0),                     // 2: truenow.rebalancer.AlertType
	(MitigationStrategy)(0),            // 3: truenow.rebalancer.MitigationStrategy
	(RebalanceStrategy)(0),             // 4: truenow.rebalancer.RebalanceStrategy
	(*GetShardAssignmentsRequest)(nil), // 5: truenow.rebalancer.GetShardAssignmentsRequest
	(*ShardAssignmentsResponse)(nil),   // 6: truenow.rebalancer.ShardAssignmentsResponse
	(*ShardAssignment)(nil),            // 7: truenow.rebalancer.ShardAssignment
	(*StreamShardUpdatesRequest)(nil),  // 8: truenow.rebalancer.StreamShardUpdatesRequest
	(*ShardUpdate)(nil),                // 9: truenow.rebalancer.ShardUpdate
	(*ShardMigration)(nil),             // 10: truenow.rebalancer.ShardMigration
	(*LoadAlert)(nil),                  // 11: truenow.rebalancer.LoadAlert
	(*GetLoadDistributionRequest)(nil), // 12: truenow.rebalancer.GetLoadDistributionRequest
	(*LoadDistributionResponse)(nil),   // 13: truenow.rebalancer.LoadDistributionResponse
	(*NodeLoad)(nil),                   // 14: truenow.rebalancer.NodeLoad
	(*BatchReportLoadRequest)(nil),     // 15: truenow.rebalancer.BatchReportLoadRequest
	(*LoadReport)(nil),                 // 16: truenow.rebalancer.LoadReport
	(*BatchReportLoadResponse)(nil),    // 17: truenow.rebalancer.BatchReportLoadResponse
	(*GetHotspotsRequest)(nil),         // 18: truenow.rebalancer.GetHotspotsRequest
	(*HotspotsResponse)(nil),           // 19: truenow.rebalancer.HotspotsResponse
	(*Hotspot)(nil),                    // 20: truenow.rebalancer.Hotspot
	(*TriggerRebalanceRequest)(nil),    // 21: truenow.rebalancer.TriggerRebalanceRequest
	(*TriggerRebalanceResponse)(nil),   // 22: truenow.rebalancer.TriggerRebalanceResponse
	(*GetRebalanceHistoryRequest)(nil), // 23: truenow.rebalancer.GetRebalanceHistoryRequest
	(*RebalanceHistoryResponse)(nil),   // 24: truenow.rebalancer.RebalanceHistoryResponse
	(*RebalanceEvent)(nil),             // 25: truenow.rebalancer.RebalanceEvent
	nil,                                // 26: truenow.rebalancer.ShardAssignmentsResponse.AssignmentsEntry
	nil,                                // 27: truenow.rebalancer.ShardAssignment.MetadataEntry
	nil,                                // 28: truenow.rebalancer.LoadDistributionResponse.NodeLoadsEntry
	nil,                                // 29: truenow.rebalancer.LoadReport.KeyFrequenciesEntry
	nil,                                // 30: truenow.rebalancer.TriggerRebalanceRequest.ParametersEntry
	(*timestamppb.Timestamp)(nil),      // 31: google.protobuf.Timestamp
}
var file_rebalancer_proto_depIdxs = []int32{
	26, // 0: truenow.rebalancer.ShardAssignmentsResponse.assignments:type_name -> truenow.rebalancer.ShardAssignmentsResponse.AssignmentsEntry
	31, // 1: truenow.rebalancer.ShardAssignmentsResponse.last_update:type_name -> google.protobuf.Timestamp
	0,  // 2: truenow.rebalancer.ShardAssignment.state:type_name -> truenow.rebalancer.ShardState
	27, // 3: truenow.rebalancer.ShardAssignment.metadata:type_name -> truenow.rebalancer.ShardAssignment.MetadataEntry
	7,  // 4: truenow.rebalancer.ShardUpdate.assignment_change:type_name -> truenow.rebalancer.ShardAssignment
	10, // 5: truenow.rebalancer.ShardUpdate.migration_event:type_name -> truenow.rebalancer.ShardMigration
	11, // 6: truenow.rebalancer.ShardUpdate.load_alert:type_name -> truenow.rebalancer.LoadAlert
	31, // 7: truenow.rebalancer.ShardUpdate.timestamp:type_name -> google.protobuf.Timestamp
	1,  // 8: truenow.rebalancer.ShardMigration.reason:type_name -> truenow.rebalancer.MigrationReason
	31, // 9: truenow.rebalancer.ShardMigration.started_at:type_name -> google.protobuf.Timestamp
	2,  // 10: truenow.rebalancer.LoadAlert.type:type_name -> truenow.rebalancer.AlertType
	28, // 11: truenow.rebalancer.LoadDistributionResponse.node_loads:type_name -> truenow.rebalancer.LoadDistributionResponse.NodeLoadsEntry
	31, // 12: truenow.rebalancer.LoadDistributionResponse.calculated_at:type_name -> google.protobuf.Timestamp
	31, // 13: truenow.rebalancer.NodeLoad.last_report:type_name -> google.protobuf.Timestamp
	16, // 14: truenow.rebalancer.BatchReportLoadRequest.reports:type_name -> truenow.rebalancer.LoadReport
	29, // 15: truenow.rebalancer.LoadReport.key_frequencies:type_name -> truenow.rebalancer.LoadReport.KeyFrequenciesEntry
	31, // 16: truenow.rebalancer.LoadReport.timestamp:type_name -> google.protobuf.Timestamp
	20, // 17: truenow.rebalancer.HotspotsResponse.hotspots:type_name -> truenow.rebalancer.Hotspot
	31, // 18: truenow.rebalancer.HotspotsResponse.detected_at:type_name -> google.protobuf.Timestamp
	3,  // 19: truenow.rebalancer.Hotspot.suggested_strategy:type_name -> truenow.rebalancer.MitigationStrategy
	4,  // 20: truenow.rebalancer.TriggerRebalanceRequest.strategy:type_name -> truenow.rebalancer.RebalanceStrategy
	30, // 21: truenow.rebalancer.TriggerRebalanceRequest.parameters:type_name -> truenow.rebalancer.TriggerRebalanceRequest.ParametersEntry
	25, // 22: truenow.rebalancer.RebalanceHistoryResponse.events:type_name -> truenow.rebalancer.RebalanceEvent
	4,  // 23: truenow.rebalancer.RebalanceEvent.strategy:type_name -> truenow.rebalancer.RebalanceStrategy
	31, // 24: truenow.rebalancer.RebalanceEvent.started_at:type_name -> google.protobuf.Timestamp
	31, // 25: truenow.rebalancer.RebalanceEvent.completed_at:type_name -> google.protobuf.Timestamp
	7,  // 26: truenow.rebalancer.ShardAssignmentsResponse.AssignmentsEntry.value:type_name -> truenow.rebalancer.ShardAssignment
	14, // 27: truenow.rebalancer.LoadDistributionResponse.NodeLoadsEntry.value:type_name -> truenow.rebalancer.NodeLoad
	5,  // 28: truenow.rebalancer.RebalancerService.GetShardAssignments:input_type -> truenow.rebalancer.GetShardAssignmentsRequest
	8,  // 29: truenow.rebalancer.RebalancerService.StreamShardUpdates:input_type -> truenow.rebalancer.StreamShardUpdatesRequest
	12, // 30: truenow.rebalancer.RebalancerService.GetLoadDistribution:input_type -> truenow.rebalancer.GetLoadDistributionRequest
	15, // 31: truenow.rebalancer.RebalancerService.BatchReportLoad:input_type -> truenow.rebalancer.BatchReportLoadRequest
	18, // 32: truenow.rebalancer.RebalancerService.GetHotspots:input_type -> truenow.rebalancer.GetHotspotsRequest
	21, // 33: truenow.rebalancer.RebalancerService.TriggerRebalance:input_type -> truenow.rebalancer.TriggerRebalanceRequest
	23, // 34: truenow.rebalancer.RebalancerService.GetRebalanceHistory:input_type -> truenow.rebalancer.GetRebalanceHistoryRequest
	6,  // 35: truenow.rebalancer.RebalancerService.GetShardAssignments:output_type -> truenow.rebalancer.ShardAssignmentsResponse
	9,  // 36: truenow.rebalancer.RebalancerService.StreamShardUpdates:output_type -> truenow.rebalancer.ShardUpdate
	13, // 37: truenow.rebalancer.RebalancerService.GetLoadDistribution:output_type -> truenow.rebalancer.LoadDistributionResponse
	17, // 38: truenow.rebalancer.RebalancerService.BatchReportLoad:output_type -> truenow.rebalancer.BatchReportLoadResponse
	19, // 39: truenow.rebalancer.RebalancerService.GetHotspots:output_type -> truenow.rebalancer.HotspotsResponse
	22, // 40: truenow.rebalancer.RebalancerService.TriggerRebalance:output_type -> truenow.rebalancer.TriggerRebalanceResponse
	24, // 41: truenow.rebalancer.RebalancerService.GetRebalanceHistory:output_type -> truenow.rebalancer.RebalanceHistoryResponse
	35, // [35:42] is the sub-list for method output_type
	28, // [28:35] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_rebalancer_proto_init() }
func file_rebalancer_proto_init() {
	if File_rebalancer_proto != nil {
		return
	}
	file_rebalancer_proto_msgTypes[4].OneofWrappers = []any{
		(*ShardUpdate_AssignmentChange)(nil),
		(*ShardUpdate_MigrationEvent)(nil),
		(*ShardUpdate_LoadAlert)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_rebalancer_proto_rawDesc), len(file_rebalancer_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rebalancer_proto_goTypes,
		DependencyIndexes: file_rebalancer_proto_depIdxs,
		EnumInfos:         file_rebalancer_proto_enumTypes,
		MessageInfos:      file_rebalancer_proto_msgTypes,
	}.Build()
	File_rebalancer_proto = out.File
	file_rebalancer_proto_goTypes = nil
	file_rebalancer_proto_depIdxs = nil
}
