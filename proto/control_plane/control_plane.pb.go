// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.3
// source: control_plane.proto

package controlplane

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FieldType int32

const (
	FieldType_STRING    FieldType = 0
	FieldType_INT32     FieldType = 1
	FieldType_INT64     FieldType = 2
	FieldType_FLOAT32   FieldType = 3
	FieldType_FLOAT64   FieldType = 4
	FieldType_BOOLEAN   FieldType = 5
	FieldType_TIMESTAMP FieldType = 6
	FieldType_BYTES     FieldType = 7
	FieldType_JSON      FieldType = 8
)

// Enum value maps for FieldType.
var (
	FieldType_name = map[int32]string{
		0: "STRING",
		1: "INT32",
		2: "INT64",
		3: "FLOAT32",
		4: "FLOAT64",
		5: "BOOLEAN",
		6: "TIMESTAMP",
		7: "BYTES",
		8: "JSON",
	}
	FieldType_value = map[string]int32{
		"STRING":    0,
		"INT32":     1,
		"INT64":     2,
		"FLOAT32":   3,
		"FLOAT64":   4,
		"BOOLEAN":   5,
		"TIMESTAMP": 6,
		"BYTES":     7,
		"JSON":      8,
	}
)

func (x FieldType) Enum() *FieldType {
	p := new(FieldType)
	*p = x
	return p
}

func (x FieldType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldType) Descriptor() protoreflect.EnumDescriptor {
	return file_control_plane_proto_enumTypes[0].Descriptor()
}

func (FieldType) Type() protoreflect.EnumType {
	return &file_control_plane_proto_enumTypes[0]
}

func (x FieldType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FieldType.Descriptor instead.
func (FieldType) EnumDescriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{0}
}

type CompressionType int32

const (
	CompressionType_NONE   CompressionType = 0
	CompressionType_SNAPPY CompressionType = 1
	CompressionType_LZ4    CompressionType = 2
	CompressionType_ZSTD   CompressionType = 3
)

// Enum value maps for CompressionType.
var (
	CompressionType_name = map[int32]string{
		0: "NONE",
		1: "SNAPPY",
		2: "LZ4",
		3: "ZSTD",
	}
	CompressionType_value = map[string]int32{
		"NONE":   0,
		"SNAPPY": 1,
		"LZ4":    2,
		"ZSTD":   3,
	}
)

func (x CompressionType) Enum() *CompressionType {
	p := new(CompressionType)
	*p = x
	return p
}

func (x CompressionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CompressionType) Descriptor() protoreflect.EnumDescriptor {
	return file_control_plane_proto_enumTypes[1].Descriptor()
}

func (CompressionType) Type() protoreflect.EnumType {
	return &file_control_plane_proto_enumTypes[1]
}

func (x CompressionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CompressionType.Descriptor instead.
func (CompressionType) EnumDescriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{1}
}

type EpochState int32

const (
	EpochState_ACTIVE        EpochState = 0
	EpochState_TRANSITIONING EpochState = 1
	EpochState_EXPIRED       EpochState = 2
)

// Enum value maps for EpochState.
var (
	EpochState_name = map[int32]string{
		0: "ACTIVE",
		1: "TRANSITIONING",
		2: "EXPIRED",
	}
	EpochState_value = map[string]int32{
		"ACTIVE":        0,
		"TRANSITIONING": 1,
		"EXPIRED":       2,
	}
)

func (x EpochState) Enum() *EpochState {
	p := new(EpochState)
	*p = x
	return p
}

func (x EpochState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EpochState) Descriptor() protoreflect.EnumDescriptor {
	return file_control_plane_proto_enumTypes[2].Descriptor()
}

func (EpochState) Type() protoreflect.EnumType {
	return &file_control_plane_proto_enumTypes[2]
}

func (x EpochState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EpochState.Descriptor instead.
func (EpochState) EnumDescriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{2}
}

type HealthStatus int32

const (
	HealthStatus_HEALTHY   HealthStatus = 0
	HealthStatus_DEGRADED  HealthStatus = 1
	HealthStatus_UNHEALTHY HealthStatus = 2
	HealthStatus_UNKNOWN   HealthStatus = 3
)

// Enum value maps for HealthStatus.
var (
	HealthStatus_name = map[int32]string{
		0: "HEALTHY",
		1: "DEGRADED",
		2: "UNHEALTHY",
		3: "UNKNOWN",
	}
	HealthStatus_value = map[string]int32{
		"HEALTHY":   0,
		"DEGRADED":  1,
		"UNHEALTHY": 2,
		"UNKNOWN":   3,
	}
)

func (x HealthStatus) Enum() *HealthStatus {
	p := new(HealthStatus)
	*p = x
	return p
}

func (x HealthStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_control_plane_proto_enumTypes[3].Descriptor()
}

func (HealthStatus) Type() protoreflect.EnumType {
	return &file_control_plane_proto_enumTypes[3]
}

func (x HealthStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthStatus.Descriptor instead.
func (HealthStatus) EnumDescriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{3}
}

type CreateSchemaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Table         string                 `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	Fields        []*FieldDefinition     `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
	Properties    map[string]string      `protobuf:"bytes,4,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Options       *SchemaOptions         `protobuf:"bytes,5,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSchemaRequest) Reset() {
	*x = CreateSchemaRequest{}
	mi := &file_control_plane_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSchemaRequest) ProtoMessage() {}

func (x *CreateSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSchemaRequest.ProtoReflect.Descriptor instead.
func (*CreateSchemaRequest) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSchemaRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CreateSchemaRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *CreateSchemaRequest) GetFields() []*FieldDefinition {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *CreateSchemaRequest) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *CreateSchemaRequest) GetOptions() *SchemaOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type FieldDefinition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          FieldType              `protobuf:"varint,2,opt,name=type,proto3,enum=truenow.controlplane.FieldType" json:"type,omitempty"`
	Required      bool                   `protobuf:"varint,3,opt,name=required,proto3" json:"required,omitempty"`
	Indexed       bool                   `protobuf:"varint,4,opt,name=indexed,proto3" json:"indexed,omitempty"`
	DefaultValue  *structpb.Value        `protobuf:"bytes,5,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	Properties    map[string]string      `protobuf:"bytes,6,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldDefinition) Reset() {
	*x = FieldDefinition{}
	mi := &file_control_plane_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldDefinition) ProtoMessage() {}

func (x *FieldDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldDefinition.ProtoReflect.Descriptor instead.
func (*FieldDefinition) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{1}
}

func (x *FieldDefinition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FieldDefinition) GetType() FieldType {
	if x != nil {
		return x.Type
	}
	return FieldType_STRING
}

func (x *FieldDefinition) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *FieldDefinition) GetIndexed() bool {
	if x != nil {
		return x.Indexed
	}
	return false
}

func (x *FieldDefinition) GetDefaultValue() *structpb.Value {
	if x != nil {
		return x.DefaultValue
	}
	return nil
}

func (x *FieldDefinition) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

type SchemaOptions struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	RetentionDays       int32                  `protobuf:"varint,1,opt,name=retention_days,json=retentionDays,proto3" json:"retention_days,omitempty"`
	ReplicationFactor   int32                  `protobuf:"varint,2,opt,name=replication_factor,json=replicationFactor,proto3" json:"replication_factor,omitempty"`
	Compression         CompressionType        `protobuf:"varint,3,opt,name=compression,proto3,enum=truenow.controlplane.CompressionType" json:"compression,omitempty"`
	DedupeEnabled       bool                   `protobuf:"varint,4,opt,name=dedupe_enabled,json=dedupeEnabled,proto3" json:"dedupe_enabled,omitempty"`
	DedupeWindowMinutes int32                  `protobuf:"varint,5,opt,name=dedupe_window_minutes,json=dedupeWindowMinutes,proto3" json:"dedupe_window_minutes,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SchemaOptions) Reset() {
	*x = SchemaOptions{}
	mi := &file_control_plane_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SchemaOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchemaOptions) ProtoMessage() {}

func (x *SchemaOptions) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchemaOptions.ProtoReflect.Descriptor instead.
func (*SchemaOptions) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{2}
}

func (x *SchemaOptions) GetRetentionDays() int32 {
	if x != nil {
		return x.RetentionDays
	}
	return 0
}

func (x *SchemaOptions) GetReplicationFactor() int32 {
	if x != nil {
		return x.ReplicationFactor
	}
	return 0
}

func (x *SchemaOptions) GetCompression() CompressionType {
	if x != nil {
		return x.Compression
	}
	return CompressionType_NONE
}

func (x *SchemaOptions) GetDedupeEnabled() bool {
	if x != nil {
		return x.DedupeEnabled
	}
	return false
}

func (x *SchemaOptions) GetDedupeWindowMinutes() int32 {
	if x != nil {
		return x.DedupeWindowMinutes
	}
	return 0
}

type CreateSchemaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	SchemaId      string                 `protobuf:"bytes,2,opt,name=schema_id,json=schemaId,proto3" json:"schema_id,omitempty"`
	Version       int32                  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSchemaResponse) Reset() {
	*x = CreateSchemaResponse{}
	mi := &file_control_plane_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSchemaResponse) ProtoMessage() {}

func (x *CreateSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSchemaResponse.ProtoReflect.Descriptor instead.
func (*CreateSchemaResponse) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{3}
}

func (x *CreateSchemaResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateSchemaResponse) GetSchemaId() string {
	if x != nil {
		return x.SchemaId
	}
	return ""
}

func (x *CreateSchemaResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *CreateSchemaResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetSchemaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Table         string                 `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	Version       int32                  `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"` // 0 for latest
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSchemaRequest) Reset() {
	*x = GetSchemaRequest{}
	mi := &file_control_plane_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchemaRequest) ProtoMessage() {}

func (x *GetSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchemaRequest.ProtoReflect.Descriptor instead.
func (*GetSchemaRequest) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{4}
}

func (x *GetSchemaRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetSchemaRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *GetSchemaRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type GetSchemaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schema        *Schema                `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSchemaResponse) Reset() {
	*x = GetSchemaResponse{}
	mi := &file_control_plane_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchemaResponse) ProtoMessage() {}

func (x *GetSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchemaResponse.ProtoReflect.Descriptor instead.
func (*GetSchemaResponse) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{5}
}

func (x *GetSchemaResponse) GetSchema() *Schema {
	if x != nil {
		return x.Schema
	}
	return nil
}

type Schema struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SchemaId      string                 `protobuf:"bytes,1,opt,name=schema_id,json=schemaId,proto3" json:"schema_id,omitempty"`
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Table         string                 `protobuf:"bytes,3,opt,name=table,proto3" json:"table,omitempty"`
	Version       int32                  `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	Fields        []*FieldDefinition     `protobuf:"bytes,5,rep,name=fields,proto3" json:"fields,omitempty"`
	Properties    map[string]string      `protobuf:"bytes,6,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Options       *SchemaOptions         `protobuf:"bytes,7,opt,name=options,proto3" json:"options,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedBy     string                 `protobuf:"bytes,10,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Schema) Reset() {
	*x = Schema{}
	mi := &file_control_plane_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Schema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schema) ProtoMessage() {}

func (x *Schema) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schema.ProtoReflect.Descriptor instead.
func (*Schema) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{6}
}

func (x *Schema) GetSchemaId() string {
	if x != nil {
		return x.SchemaId
	}
	return ""
}

func (x *Schema) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *Schema) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *Schema) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Schema) GetFields() []*FieldDefinition {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *Schema) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *Schema) GetOptions() *SchemaOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *Schema) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Schema) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Schema) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

type UpdateSchemaRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Namespace          string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Table              string                 `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	Fields             []*FieldDefinition     `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
	Properties         map[string]string      `protobuf:"bytes,4,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	BackwardCompatible bool                   `protobuf:"varint,5,opt,name=backward_compatible,json=backwardCompatible,proto3" json:"backward_compatible,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *UpdateSchemaRequest) Reset() {
	*x = UpdateSchemaRequest{}
	mi := &file_control_plane_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSchemaRequest) ProtoMessage() {}

func (x *UpdateSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSchemaRequest.ProtoReflect.Descriptor instead.
func (*UpdateSchemaRequest) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateSchemaRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UpdateSchemaRequest) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *UpdateSchemaRequest) GetFields() []*FieldDefinition {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *UpdateSchemaRequest) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *UpdateSchemaRequest) GetBackwardCompatible() bool {
	if x != nil {
		return x.BackwardCompatible
	}
	return false
}

type UpdateSchemaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	NewVersion    int32                  `protobuf:"varint,2,opt,name=new_version,json=newVersion,proto3" json:"new_version,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Warnings      []string               `protobuf:"bytes,4,rep,name=warnings,proto3" json:"warnings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSchemaResponse) Reset() {
	*x = UpdateSchemaResponse{}
	mi := &file_control_plane_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSchemaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSchemaResponse) ProtoMessage() {}

func (x *UpdateSchemaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSchemaResponse.ProtoReflect.Descriptor instead.
func (*UpdateSchemaResponse) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateSchemaResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateSchemaResponse) GetNewVersion() int32 {
	if x != nil {
		return x.NewVersion
	}
	return 0
}

func (x *UpdateSchemaResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateSchemaResponse) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

type ListSchemasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"` // Optional filter
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSchemasRequest) Reset() {
	*x = ListSchemasRequest{}
	mi := &file_control_plane_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSchemasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSchemasRequest) ProtoMessage() {}

func (x *ListSchemasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSchemasRequest.ProtoReflect.Descriptor instead.
func (*ListSchemasRequest) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{9}
}

func (x *ListSchemasRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ListSchemasRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListSchemasRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListSchemasResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemas       []*Schema              `protobuf:"bytes,1,rep,name=schemas,proto3" json:"schemas,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSchemasResponse) Reset() {
	*x = ListSchemasResponse{}
	mi := &file_control_plane_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSchemasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSchemasResponse) ProtoMessage() {}

func (x *ListSchemasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSchemasResponse.ProtoReflect.Descriptor instead.
func (*ListSchemasResponse) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{10}
}

func (x *ListSchemasResponse) GetSchemas() []*Schema {
	if x != nil {
		return x.Schemas
	}
	return nil
}

func (x *ListSchemasResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type GetCurrentEpochRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCurrentEpochRequest) Reset() {
	*x = GetCurrentEpochRequest{}
	mi := &file_control_plane_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCurrentEpochRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentEpochRequest) ProtoMessage() {}

func (x *GetCurrentEpochRequest) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentEpochRequest.ProtoReflect.Descriptor instead.
func (*GetCurrentEpochRequest) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{11}
}

func (x *GetCurrentEpochRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type GetCurrentEpochResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Epoch         *Epoch                 `protobuf:"bytes,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCurrentEpochResponse) Reset() {
	*x = GetCurrentEpochResponse{}
	mi := &file_control_plane_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCurrentEpochResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentEpochResponse) ProtoMessage() {}

func (x *GetCurrentEpochResponse) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentEpochResponse.ProtoReflect.Descriptor instead.
func (*GetCurrentEpochResponse) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{12}
}

func (x *GetCurrentEpochResponse) GetEpoch() *Epoch {
	if x != nil {
		return x.Epoch
	}
	return nil
}

type Epoch struct {
	state            protoimpl.MessageState           `protogen:"open.v1"`
	EpochId          int64                            `protobuf:"varint,1,opt,name=epoch_id,json=epochId,proto3" json:"epoch_id,omitempty"`
	Version          int64                            `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	State            EpochState                       `protobuf:"varint,3,opt,name=state,proto3,enum=truenow.controlplane.EpochState" json:"state,omitempty"`
	Services         map[string]*ServiceConfiguration `protobuf:"bytes,4,rep,name=services,proto3" json:"services,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ShardAssignments map[string]*ShardAssignment      `protobuf:"bytes,5,rep,name=shard_assignments,json=shardAssignments,proto3" json:"shard_assignments,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	StartedAt        *timestamppb.Timestamp           `protobuf:"bytes,6,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	ExpiresAt        *timestamppb.Timestamp           `protobuf:"bytes,7,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Epoch) Reset() {
	*x = Epoch{}
	mi := &file_control_plane_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Epoch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Epoch) ProtoMessage() {}

func (x *Epoch) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Epoch.ProtoReflect.Descriptor instead.
func (*Epoch) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{13}
}

func (x *Epoch) GetEpochId() int64 {
	if x != nil {
		return x.EpochId
	}
	return 0
}

func (x *Epoch) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Epoch) GetState() EpochState {
	if x != nil {
		return x.State
	}
	return EpochState_ACTIVE
}

func (x *Epoch) GetServices() map[string]*ServiceConfiguration {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *Epoch) GetShardAssignments() map[string]*ShardAssignment {
	if x != nil {
		return x.ShardAssignments
	}
	return nil
}

func (x *Epoch) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *Epoch) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

type ServiceConfiguration struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceType   string                 `protobuf:"bytes,1,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	InstanceCount int32                  `protobuf:"varint,2,opt,name=instance_count,json=instanceCount,proto3" json:"instance_count,omitempty"`
	Config        map[string]string      `protobuf:"bytes,3,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceConfiguration) Reset() {
	*x = ServiceConfiguration{}
	mi := &file_control_plane_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceConfiguration) ProtoMessage() {}

func (x *ServiceConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceConfiguration.ProtoReflect.Descriptor instead.
func (*ServiceConfiguration) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{14}
}

func (x *ServiceConfiguration) GetServiceType() string {
	if x != nil {
		return x.ServiceType
	}
	return ""
}

func (x *ServiceConfiguration) GetInstanceCount() int32 {
	if x != nil {
		return x.InstanceCount
	}
	return 0
}

func (x *ServiceConfiguration) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

type ShardAssignment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShardId       string                 `protobuf:"bytes,1,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	NodeIds       []string               `protobuf:"bytes,2,rep,name=node_ids,json=nodeIds,proto3" json:"node_ids,omitempty"`
	Primary       string                 `protobuf:"bytes,3,opt,name=primary,proto3" json:"primary,omitempty"`
	Replicas      []string               `protobuf:"bytes,4,rep,name=replicas,proto3" json:"replicas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShardAssignment) Reset() {
	*x = ShardAssignment{}
	mi := &file_control_plane_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShardAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShardAssignment) ProtoMessage() {}

func (x *ShardAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShardAssignment.ProtoReflect.Descriptor instead.
func (*ShardAssignment) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{15}
}

func (x *ShardAssignment) GetShardId() string {
	if x != nil {
		return x.ShardId
	}
	return ""
}

func (x *ShardAssignment) GetNodeIds() []string {
	if x != nil {
		return x.NodeIds
	}
	return nil
}

func (x *ShardAssignment) GetPrimary() string {
	if x != nil {
		return x.Primary
	}
	return ""
}

func (x *ShardAssignment) GetReplicas() []string {
	if x != nil {
		return x.Replicas
	}
	return nil
}

type ProposeEpochTransitionRequest struct {
	state                     protoimpl.MessageState           `protogen:"open.v1"`
	Namespace                 string                           `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	NewServices               map[string]*ServiceConfiguration `protobuf:"bytes,2,rep,name=new_services,json=newServices,proto3" json:"new_services,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	NewShardAssignments       map[string]*ShardAssignment      `protobuf:"bytes,3,rep,name=new_shard_assignments,json=newShardAssignments,proto3" json:"new_shard_assignments,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Reason                    string                           `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	TransitionDurationSeconds int32                            `protobuf:"varint,5,opt,name=transition_duration_seconds,json=transitionDurationSeconds,proto3" json:"transition_duration_seconds,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *ProposeEpochTransitionRequest) Reset() {
	*x = ProposeEpochTransitionRequest{}
	mi := &file_control_plane_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProposeEpochTransitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposeEpochTransitionRequest) ProtoMessage() {}

func (x *ProposeEpochTransitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposeEpochTransitionRequest.ProtoReflect.Descriptor instead.
func (*ProposeEpochTransitionRequest) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{16}
}

func (x *ProposeEpochTransitionRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ProposeEpochTransitionRequest) GetNewServices() map[string]*ServiceConfiguration {
	if x != nil {
		return x.NewServices
	}
	return nil
}

func (x *ProposeEpochTransitionRequest) GetNewShardAssignments() map[string]*ShardAssignment {
	if x != nil {
		return x.NewShardAssignments
	}
	return nil
}

func (x *ProposeEpochTransitionRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ProposeEpochTransitionRequest) GetTransitionDurationSeconds() int32 {
	if x != nil {
		return x.TransitionDurationSeconds
	}
	return 0
}

type ProposeEpochTransitionResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Accepted         bool                   `protobuf:"varint,1,opt,name=accepted,proto3" json:"accepted,omitempty"`
	ProposedEpochId  int64                  `protobuf:"varint,2,opt,name=proposed_epoch_id,json=proposedEpochId,proto3" json:"proposed_epoch_id,omitempty"`
	Message          string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	ValidationErrors []string               `protobuf:"bytes,4,rep,name=validation_errors,json=validationErrors,proto3" json:"validation_errors,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ProposeEpochTransitionResponse) Reset() {
	*x = ProposeEpochTransitionResponse{}
	mi := &file_control_plane_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProposeEpochTransitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposeEpochTransitionResponse) ProtoMessage() {}

func (x *ProposeEpochTransitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposeEpochTransitionResponse.ProtoReflect.Descriptor instead.
func (*ProposeEpochTransitionResponse) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{17}
}

func (x *ProposeEpochTransitionResponse) GetAccepted() bool {
	if x != nil {
		return x.Accepted
	}
	return false
}

func (x *ProposeEpochTransitionResponse) GetProposedEpochId() int64 {
	if x != nil {
		return x.ProposedEpochId
	}
	return 0
}

func (x *ProposeEpochTransitionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ProposeEpochTransitionResponse) GetValidationErrors() []string {
	if x != nil {
		return x.ValidationErrors
	}
	return nil
}

type CommitEpochRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EpochId       int64                  `protobuf:"varint,1,opt,name=epoch_id,json=epochId,proto3" json:"epoch_id,omitempty"`
	Force         bool                   `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitEpochRequest) Reset() {
	*x = CommitEpochRequest{}
	mi := &file_control_plane_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitEpochRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitEpochRequest) ProtoMessage() {}

func (x *CommitEpochRequest) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitEpochRequest.ProtoReflect.Descriptor instead.
func (*CommitEpochRequest) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{18}
}

func (x *CommitEpochRequest) GetEpochId() int64 {
	if x != nil {
		return x.EpochId
	}
	return 0
}

func (x *CommitEpochRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type CommitEpochResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	CommittedAt   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=committed_at,json=committedAt,proto3" json:"committed_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitEpochResponse) Reset() {
	*x = CommitEpochResponse{}
	mi := &file_control_plane_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitEpochResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitEpochResponse) ProtoMessage() {}

func (x *CommitEpochResponse) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitEpochResponse.ProtoReflect.Descriptor instead.
func (*CommitEpochResponse) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{19}
}

func (x *CommitEpochResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CommitEpochResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CommitEpochResponse) GetCommittedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CommittedAt
	}
	return nil
}

type RegisterServiceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceId     string                 `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	ServiceType   string                 `protobuf:"bytes,2,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	Host          string                 `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Port          int32                  `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Health        *ServiceHealth         `protobuf:"bytes,6,opt,name=health,proto3" json:"health,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterServiceRequest) Reset() {
	*x = RegisterServiceRequest{}
	mi := &file_control_plane_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterServiceRequest) ProtoMessage() {}

func (x *RegisterServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterServiceRequest.ProtoReflect.Descriptor instead.
func (*RegisterServiceRequest) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{20}
}

func (x *RegisterServiceRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *RegisterServiceRequest) GetServiceType() string {
	if x != nil {
		return x.ServiceType
	}
	return ""
}

func (x *RegisterServiceRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *RegisterServiceRequest) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *RegisterServiceRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *RegisterServiceRequest) GetHealth() *ServiceHealth {
	if x != nil {
		return x.Health
	}
	return nil
}

type ServiceHealth struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        HealthStatus           `protobuf:"varint,1,opt,name=status,proto3,enum=truenow.controlplane.HealthStatus" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	LastCheck     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_check,json=lastCheck,proto3" json:"last_check,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceHealth) Reset() {
	*x = ServiceHealth{}
	mi := &file_control_plane_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceHealth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceHealth) ProtoMessage() {}

func (x *ServiceHealth) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceHealth.ProtoReflect.Descriptor instead.
func (*ServiceHealth) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{21}
}

func (x *ServiceHealth) GetStatus() HealthStatus {
	if x != nil {
		return x.Status
	}
	return HealthStatus_HEALTHY
}

func (x *ServiceHealth) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ServiceHealth) GetLastCheck() *timestamppb.Timestamp {
	if x != nil {
		return x.LastCheck
	}
	return nil
}

type RegisterServiceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	TtlSeconds    int32                  `protobuf:"varint,3,opt,name=ttl_seconds,json=ttlSeconds,proto3" json:"ttl_seconds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterServiceResponse) Reset() {
	*x = RegisterServiceResponse{}
	mi := &file_control_plane_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterServiceResponse) ProtoMessage() {}

func (x *RegisterServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterServiceResponse.ProtoReflect.Descriptor instead.
func (*RegisterServiceResponse) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{22}
}

func (x *RegisterServiceResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterServiceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RegisterServiceResponse) GetTtlSeconds() int32 {
	if x != nil {
		return x.TtlSeconds
	}
	return 0
}

type UnregisterServiceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceId     string                 `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnregisterServiceRequest) Reset() {
	*x = UnregisterServiceRequest{}
	mi := &file_control_plane_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterServiceRequest) ProtoMessage() {}

func (x *UnregisterServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterServiceRequest.ProtoReflect.Descriptor instead.
func (*UnregisterServiceRequest) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{23}
}

func (x *UnregisterServiceRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *UnregisterServiceRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type UnregisterServiceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnregisterServiceResponse) Reset() {
	*x = UnregisterServiceResponse{}
	mi := &file_control_plane_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterServiceResponse) ProtoMessage() {}

func (x *UnregisterServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterServiceResponse.ProtoReflect.Descriptor instead.
func (*UnregisterServiceResponse) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{24}
}

func (x *UnregisterServiceResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UnregisterServiceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListServicesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceType   string                 `protobuf:"bytes,1,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"` // Optional filter
	HealthFilter  HealthStatus           `protobuf:"varint,2,opt,name=health_filter,json=healthFilter,proto3,enum=truenow.controlplane.HealthStatus" json:"health_filter,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListServicesRequest) Reset() {
	*x = ListServicesRequest{}
	mi := &file_control_plane_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListServicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServicesRequest) ProtoMessage() {}

func (x *ListServicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServicesRequest.ProtoReflect.Descriptor instead.
func (*ListServicesRequest) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{25}
}

func (x *ListServicesRequest) GetServiceType() string {
	if x != nil {
		return x.ServiceType
	}
	return ""
}

func (x *ListServicesRequest) GetHealthFilter() HealthStatus {
	if x != nil {
		return x.HealthFilter
	}
	return HealthStatus_HEALTHY
}

func (x *ListServicesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListServicesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListServicesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Services      []*ServiceInstance     `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListServicesResponse) Reset() {
	*x = ListServicesResponse{}
	mi := &file_control_plane_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListServicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServicesResponse) ProtoMessage() {}

func (x *ListServicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServicesResponse.ProtoReflect.Descriptor instead.
func (*ListServicesResponse) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{26}
}

func (x *ListServicesResponse) GetServices() []*ServiceInstance {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *ListServicesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type ServiceInstance struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceId     string                 `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	ServiceType   string                 `protobuf:"bytes,2,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	Host          string                 `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Port          int32                  `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Health        *ServiceHealth         `protobuf:"bytes,6,opt,name=health,proto3" json:"health,omitempty"`
	RegisteredAt  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=registered_at,json=registeredAt,proto3" json:"registered_at,omitempty"`
	LastHeartbeat *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=last_heartbeat,json=lastHeartbeat,proto3" json:"last_heartbeat,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceInstance) Reset() {
	*x = ServiceInstance{}
	mi := &file_control_plane_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceInstance) ProtoMessage() {}

func (x *ServiceInstance) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceInstance.ProtoReflect.Descriptor instead.
func (*ServiceInstance) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{27}
}

func (x *ServiceInstance) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *ServiceInstance) GetServiceType() string {
	if x != nil {
		return x.ServiceType
	}
	return ""
}

func (x *ServiceInstance) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ServiceInstance) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ServiceInstance) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ServiceInstance) GetHealth() *ServiceHealth {
	if x != nil {
		return x.Health
	}
	return nil
}

func (x *ServiceInstance) GetRegisteredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RegisteredAt
	}
	return nil
}

func (x *ServiceInstance) GetLastHeartbeat() *timestamppb.Timestamp {
	if x != nil {
		return x.LastHeartbeat
	}
	return nil
}

type GetServiceEndpointsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceType   string                 `protobuf:"bytes,1,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	Namespace     string                 `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	HealthyOnly   bool                   `protobuf:"varint,3,opt,name=healthy_only,json=healthyOnly,proto3" json:"healthy_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServiceEndpointsRequest) Reset() {
	*x = GetServiceEndpointsRequest{}
	mi := &file_control_plane_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServiceEndpointsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceEndpointsRequest) ProtoMessage() {}

func (x *GetServiceEndpointsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceEndpointsRequest.ProtoReflect.Descriptor instead.
func (*GetServiceEndpointsRequest) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{28}
}

func (x *GetServiceEndpointsRequest) GetServiceType() string {
	if x != nil {
		return x.ServiceType
	}
	return ""
}

func (x *GetServiceEndpointsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetServiceEndpointsRequest) GetHealthyOnly() bool {
	if x != nil {
		return x.HealthyOnly
	}
	return false
}

type GetServiceEndpointsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Endpoints     []*Endpoint            `protobuf:"bytes,1,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServiceEndpointsResponse) Reset() {
	*x = GetServiceEndpointsResponse{}
	mi := &file_control_plane_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServiceEndpointsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServiceEndpointsResponse) ProtoMessage() {}

func (x *GetServiceEndpointsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServiceEndpointsResponse.ProtoReflect.Descriptor instead.
func (*GetServiceEndpointsResponse) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{29}
}

func (x *GetServiceEndpointsResponse) GetEndpoints() []*Endpoint {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

type Endpoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceId     string                 `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Weight        float64                `protobuf:"fixed64,4,opt,name=weight,proto3" json:"weight,omitempty"` // For weighted load balancing
	Health        *ServiceHealth         `protobuf:"bytes,5,opt,name=health,proto3" json:"health,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Endpoint) Reset() {
	*x = Endpoint{}
	mi := &file_control_plane_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Endpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Endpoint) ProtoMessage() {}

func (x *Endpoint) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Endpoint.ProtoReflect.Descriptor instead.
func (*Endpoint) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{30}
}

func (x *Endpoint) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *Endpoint) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Endpoint) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Endpoint) GetWeight() float64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Endpoint) GetHealth() *ServiceHealth {
	if x != nil {
		return x.Health
	}
	return nil
}

type GetConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     string                 `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ServiceType   string                 `protobuf:"bytes,2,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	Key           string                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"` // Optional, get specific key
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConfigRequest) Reset() {
	*x = GetConfigRequest{}
	mi := &file_control_plane_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigRequest) ProtoMessage() {}

func (x *GetConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigRequest.ProtoReflect.Descriptor instead.
func (*GetConfigRequest) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{31}
}

func (x *GetConfigRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetConfigRequest) GetServiceType() string {
	if x != nil {
		return x.ServiceType
	}
	return ""
}

func (x *GetConfigRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetConfigResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Config        map[string]*structpb.Value `protobuf:"bytes,1,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Version       int32                      `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	UpdatedAt     *timestamppb.Timestamp     `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConfigResponse) Reset() {
	*x = GetConfigResponse{}
	mi := &file_control_plane_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigResponse) ProtoMessage() {}

func (x *GetConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigResponse.ProtoReflect.Descriptor instead.
func (*GetConfigResponse) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{32}
}

func (x *GetConfigResponse) GetConfig() map[string]*structpb.Value {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *GetConfigResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GetConfigResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type UpdateConfigRequest struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Namespace     string                     `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ServiceType   string                     `protobuf:"bytes,2,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	Config        map[string]*structpb.Value `protobuf:"bytes,3,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Reason        string                     `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateConfigRequest) Reset() {
	*x = UpdateConfigRequest{}
	mi := &file_control_plane_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConfigRequest) ProtoMessage() {}

func (x *UpdateConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConfigRequest.ProtoReflect.Descriptor instead.
func (*UpdateConfigRequest) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{33}
}

func (x *UpdateConfigRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UpdateConfigRequest) GetServiceType() string {
	if x != nil {
		return x.ServiceType
	}
	return ""
}

func (x *UpdateConfigRequest) GetConfig() map[string]*structpb.Value {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *UpdateConfigRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type UpdateConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	NewVersion    int32                  `protobuf:"varint,2,opt,name=new_version,json=newVersion,proto3" json:"new_version,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateConfigResponse) Reset() {
	*x = UpdateConfigResponse{}
	mi := &file_control_plane_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConfigResponse) ProtoMessage() {}

func (x *UpdateConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConfigResponse.ProtoReflect.Descriptor instead.
func (*UpdateConfigResponse) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{34}
}

func (x *UpdateConfigResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateConfigResponse) GetNewVersion() int32 {
	if x != nil {
		return x.NewVersion
	}
	return 0
}

func (x *UpdateConfigResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetAuditLogRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     int64                  `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       int64                  `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	User          string                 `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`     // Optional filter
	Action        string                 `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"` // Optional filter
	Limit         int32                  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,6,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAuditLogRequest) Reset() {
	*x = GetAuditLogRequest{}
	mi := &file_control_plane_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAuditLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuditLogRequest) ProtoMessage() {}

func (x *GetAuditLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuditLogRequest.ProtoReflect.Descriptor instead.
func (*GetAuditLogRequest) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{35}
}

func (x *GetAuditLogRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetAuditLogRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *GetAuditLogRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *GetAuditLogRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *GetAuditLogRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAuditLogRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetAuditLogResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*AuditEvent          `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAuditLogResponse) Reset() {
	*x = GetAuditLogResponse{}
	mi := &file_control_plane_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAuditLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuditLogResponse) ProtoMessage() {}

func (x *GetAuditLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuditLogResponse.ProtoReflect.Descriptor instead.
func (*GetAuditLogResponse) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{36}
}

func (x *GetAuditLogResponse) GetEvents() []*AuditEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *GetAuditLogResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type AuditEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	User          string                 `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Action        string                 `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
	Resource      string                 `protobuf:"bytes,4,opt,name=resource,proto3" json:"resource,omitempty"`
	Details       map[string]string      `protobuf:"bytes,5,rep,name=details,proto3" json:"details,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	IpAddress     string                 `protobuf:"bytes,6,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Success       bool                   `protobuf:"varint,8,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,9,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuditEvent) Reset() {
	*x = AuditEvent{}
	mi := &file_control_plane_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditEvent) ProtoMessage() {}

func (x *AuditEvent) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditEvent.ProtoReflect.Descriptor instead.
func (*AuditEvent) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{37}
}

func (x *AuditEvent) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *AuditEvent) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *AuditEvent) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *AuditEvent) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *AuditEvent) GetDetails() map[string]string {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *AuditEvent) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *AuditEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *AuditEvent) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AuditEvent) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type RecordAuditEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Event         *AuditEvent            `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecordAuditEventRequest) Reset() {
	*x = RecordAuditEventRequest{}
	mi := &file_control_plane_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordAuditEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordAuditEventRequest) ProtoMessage() {}

func (x *RecordAuditEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordAuditEventRequest.ProtoReflect.Descriptor instead.
func (*RecordAuditEventRequest) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{38}
}

func (x *RecordAuditEventRequest) GetEvent() *AuditEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

type RecordAuditEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	EventId       string                 `protobuf:"bytes,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecordAuditEventResponse) Reset() {
	*x = RecordAuditEventResponse{}
	mi := &file_control_plane_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordAuditEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordAuditEventResponse) ProtoMessage() {}

func (x *RecordAuditEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_control_plane_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordAuditEventResponse.ProtoReflect.Descriptor instead.
func (*RecordAuditEventResponse) Descriptor() ([]byte, []int) {
	return file_control_plane_proto_rawDescGZIP(), []int{39}
}

func (x *RecordAuditEventResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RecordAuditEventResponse) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

var File_control_plane_proto protoreflect.FileDescriptor

const file_control_plane_proto_rawDesc = "" +
	"\n" +
	"\x13control_plane.proto\x12\x14truenow.controlplane\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/protobuf/struct.proto\"\xe1\x02\n" +
	"\x13CreateSchemaRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x14\n" +
	"\x05table\x18\x02 \x01(\tR\x05table\x12=\n" +
	"\x06fields\x18\x03 \x03(\v2%.truenow.controlplane.FieldDefinitionR\x06fields\x12Y\n" +
	"\n" +
	"properties\x18\x04 \x03(\v29.truenow.controlplane.CreateSchemaRequest.PropertiesEntryR\n" +
	"properties\x12=\n" +
	"\aoptions\x18\x05 \x01(\v2#.truenow.controlplane.SchemaOptionsR\aoptions\x1a=\n" +
	"\x0fPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe3\x02\n" +
	"\x0fFieldDefinition\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x123\n" +
	"\x04type\x18\x02 \x01(\x0e2\x1f.truenow.controlplane.FieldTypeR\x04type\x12\x1a\n" +
	"\brequired\x18\x03 \x01(\bR\brequired\x12\x18\n" +
	"\aindexed\x18\x04 \x01(\bR\aindexed\x12;\n" +
	"\rdefault_value\x18\x05 \x01(\v2\x16.google.protobuf.ValueR\fdefaultValue\x12U\n" +
	"\n" +
	"properties\x18\x06 \x03(\v25.truenow.controlplane.FieldDefinition.PropertiesEntryR\n" +
	"properties\x1a=\n" +
	"\x0fPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x89\x02\n" +
	"\rSchemaOptions\x12%\n" +
	"\x0eretention_days\x18\x01 \x01(\x05R\rretentionDays\x12-\n" +
	"\x12replication_factor\x18\x02 \x01(\x05R\x11replicationFactor\x12G\n" +
	"\vcompression\x18\x03 \x01(\x0e2%.truenow.controlplane.CompressionTypeR\vcompression\x12%\n" +
	"\x0ededupe_enabled\x18\x04 \x01(\bR\rdedupeEnabled\x122\n" +
	"\x15dedupe_window_minutes\x18\x05 \x01(\x05R\x13dedupeWindowMinutes\"\x81\x01\n" +
	"\x14CreateSchemaResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1b\n" +
	"\tschema_id\x18\x02 \x01(\tR\bschemaId\x12\x18\n" +
	"\aversion\x18\x03 \x01(\x05R\aversion\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\"`\n" +
	"\x10GetSchemaRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x14\n" +
	"\x05table\x18\x02 \x01(\tR\x05table\x12\x18\n" +
	"\aversion\x18\x03 \x01(\x05R\aversion\"I\n" +
	"\x11GetSchemaResponse\x124\n" +
	"\x06schema\x18\x01 \x01(\v2\x1c.truenow.controlplane.SchemaR\x06schema\"\x93\x04\n" +
	"\x06Schema\x12\x1b\n" +
	"\tschema_id\x18\x01 \x01(\tR\bschemaId\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12\x14\n" +
	"\x05table\x18\x03 \x01(\tR\x05table\x12\x18\n" +
	"\aversion\x18\x04 \x01(\x05R\aversion\x12=\n" +
	"\x06fields\x18\x05 \x03(\v2%.truenow.controlplane.FieldDefinitionR\x06fields\x12L\n" +
	"\n" +
	"properties\x18\x06 \x03(\v2,.truenow.controlplane.Schema.PropertiesEntryR\n" +
	"properties\x12=\n" +
	"\aoptions\x18\a \x01(\v2#.truenow.controlplane.SchemaOptionsR\aoptions\x129\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x1d\n" +
	"\n" +
	"created_by\x18\n" +
	" \x01(\tR\tcreatedBy\x1a=\n" +
	"\x0fPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd3\x02\n" +
	"\x13UpdateSchemaRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x14\n" +
	"\x05table\x18\x02 \x01(\tR\x05table\x12=\n" +
	"\x06fields\x18\x03 \x03(\v2%.truenow.controlplane.FieldDefinitionR\x06fields\x12Y\n" +
	"\n" +
	"properties\x18\x04 \x03(\v29.truenow.controlplane.UpdateSchemaRequest.PropertiesEntryR\n" +
	"properties\x12/\n" +
	"\x13backward_compatible\x18\x05 \x01(\bR\x12backwardCompatible\x1a=\n" +
	"\x0fPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x87\x01\n" +
	"\x14UpdateSchemaResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1f\n" +
	"\vnew_version\x18\x02 \x01(\x05R\n" +
	"newVersion\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12\x1a\n" +
	"\bwarnings\x18\x04 \x03(\tR\bwarnings\"`\n" +
	"\x12ListSchemasRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x05R\x06offset\"n\n" +
	"\x13ListSchemasResponse\x126\n" +
	"\aschemas\x18\x01 \x03(\v2\x1c.truenow.controlplane.SchemaR\aschemas\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"6\n" +
	"\x16GetCurrentEpochRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\"L\n" +
	"\x17GetCurrentEpochResponse\x121\n" +
	"\x05epoch\x18\x01 \x01(\v2\x1b.truenow.controlplane.EpochR\x05epoch\"\xe6\x04\n" +
	"\x05Epoch\x12\x19\n" +
	"\bepoch_id\x18\x01 \x01(\x03R\aepochId\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x03R\aversion\x126\n" +
	"\x05state\x18\x03 \x01(\x0e2 .truenow.controlplane.EpochStateR\x05state\x12E\n" +
	"\bservices\x18\x04 \x03(\v2).truenow.controlplane.Epoch.ServicesEntryR\bservices\x12^\n" +
	"\x11shard_assignments\x18\x05 \x03(\v21.truenow.controlplane.Epoch.ShardAssignmentsEntryR\x10shardAssignments\x129\n" +
	"\n" +
	"started_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x129\n" +
	"\n" +
	"expires_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x1ag\n" +
	"\rServicesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12@\n" +
	"\x05value\x18\x02 \x01(\v2*.truenow.controlplane.ServiceConfigurationR\x05value:\x028\x01\x1aj\n" +
	"\x15ShardAssignmentsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12;\n" +
	"\x05value\x18\x02 \x01(\v2%.truenow.controlplane.ShardAssignmentR\x05value:\x028\x01\"\xeb\x01\n" +
	"\x14ServiceConfiguration\x12!\n" +
	"\fservice_type\x18\x01 \x01(\tR\vserviceType\x12%\n" +
	"\x0einstance_count\x18\x02 \x01(\x05R\rinstanceCount\x12N\n" +
	"\x06config\x18\x03 \x03(\v26.truenow.controlplane.ServiceConfiguration.ConfigEntryR\x06config\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"}\n" +
	"\x0fShardAssignment\x12\x19\n" +
	"\bshard_id\x18\x01 \x01(\tR\ashardId\x12\x19\n" +
	"\bnode_ids\x18\x02 \x03(\tR\anodeIds\x12\x18\n" +
	"\aprimary\x18\x03 \x01(\tR\aprimary\x12\x1a\n" +
	"\breplicas\x18\x04 \x03(\tR\breplicas\"\xdc\x04\n" +
	"\x1dProposeEpochTransitionRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12g\n" +
	"\fnew_services\x18\x02 \x03(\v2D.truenow.controlplane.ProposeEpochTransitionRequest.NewServicesEntryR\vnewServices\x12\x80\x01\n" +
	"\x15new_shard_assignments\x18\x03 \x03(\v2L.truenow.controlplane.ProposeEpochTransitionRequest.NewShardAssignmentsEntryR\x13newShardAssignments\x12\x16\n" +
	"\x06reason\x18\x04 \x01(\tR\x06reason\x12>\n" +
	"\x1btransition_duration_seconds\x18\x05 \x01(\x05R\x19transitionDurationSeconds\x1aj\n" +
	"\x10NewServicesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12@\n" +
	"\x05value\x18\x02 \x01(\v2*.truenow.controlplane.ServiceConfigurationR\x05value:\x028\x01\x1am\n" +
	"\x18NewShardAssignmentsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12;\n" +
	"\x05value\x18\x02 \x01(\v2%.truenow.controlplane.ShardAssignmentR\x05value:\x028\x01\"\xaf\x01\n" +
	"\x1eProposeEpochTransitionResponse\x12\x1a\n" +
	"\baccepted\x18\x01 \x01(\bR\baccepted\x12*\n" +
	"\x11proposed_epoch_id\x18\x02 \x01(\x03R\x0fproposedEpochId\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12+\n" +
	"\x11validation_errors\x18\x04 \x03(\tR\x10validationErrors\"E\n" +
	"\x12CommitEpochRequest\x12\x19\n" +
	"\bepoch_id\x18\x01 \x01(\x03R\aepochId\x12\x14\n" +
	"\x05force\x18\x02 \x01(\bR\x05force\"\x88\x01\n" +
	"\x13CommitEpochResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12=\n" +
	"\fcommitted_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\vcommittedAt\"\xd4\x02\n" +
	"\x16RegisterServiceRequest\x12\x1d\n" +
	"\n" +
	"service_id\x18\x01 \x01(\tR\tserviceId\x12!\n" +
	"\fservice_type\x18\x02 \x01(\tR\vserviceType\x12\x12\n" +
	"\x04host\x18\x03 \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18\x04 \x01(\x05R\x04port\x12V\n" +
	"\bmetadata\x18\x05 \x03(\v2:.truenow.controlplane.RegisterServiceRequest.MetadataEntryR\bmetadata\x12;\n" +
	"\x06health\x18\x06 \x01(\v2#.truenow.controlplane.ServiceHealthR\x06health\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa0\x01\n" +
	"\rServiceHealth\x12:\n" +
	"\x06status\x18\x01 \x01(\x0e2\".truenow.controlplane.HealthStatusR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x129\n" +
	"\n" +
	"last_check\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tlastCheck\"n\n" +
	"\x17RegisterServiceResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1f\n" +
	"\vttl_seconds\x18\x03 \x01(\x05R\n" +
	"ttlSeconds\"Q\n" +
	"\x18UnregisterServiceRequest\x12\x1d\n" +
	"\n" +
	"service_id\x18\x01 \x01(\tR\tserviceId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"O\n" +
	"\x19UnregisterServiceResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xaf\x01\n" +
	"\x13ListServicesRequest\x12!\n" +
	"\fservice_type\x18\x01 \x01(\tR\vserviceType\x12G\n" +
	"\rhealth_filter\x18\x02 \x01(\x0e2\".truenow.controlplane.HealthStatusR\fhealthFilter\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x04 \x01(\x05R\x06offset\"z\n" +
	"\x14ListServicesResponse\x12A\n" +
	"\bservices\x18\x01 \x03(\v2%.truenow.controlplane.ServiceInstanceR\bservices\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"\xca\x03\n" +
	"\x0fServiceInstance\x12\x1d\n" +
	"\n" +
	"service_id\x18\x01 \x01(\tR\tserviceId\x12!\n" +
	"\fservice_type\x18\x02 \x01(\tR\vserviceType\x12\x12\n" +
	"\x04host\x18\x03 \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18\x04 \x01(\x05R\x04port\x12O\n" +
	"\bmetadata\x18\x05 \x03(\v23.truenow.controlplane.ServiceInstance.MetadataEntryR\bmetadata\x12;\n" +
	"\x06health\x18\x06 \x01(\v2#.truenow.controlplane.ServiceHealthR\x06health\x12?\n" +
	"\rregistered_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\fregisteredAt\x12A\n" +
	"\x0elast_heartbeat\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\rlastHeartbeat\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x80\x01\n" +
	"\x1aGetServiceEndpointsRequest\x12!\n" +
	"\fservice_type\x18\x01 \x01(\tR\vserviceType\x12\x1c\n" +
	"\tnamespace\x18\x02 \x01(\tR\tnamespace\x12!\n" +
	"\fhealthy_only\x18\x03 \x01(\bR\vhealthyOnly\"[\n" +
	"\x1bGetServiceEndpointsResponse\x12<\n" +
	"\tendpoints\x18\x01 \x03(\v2\x1e.truenow.controlplane.EndpointR\tendpoints\"\x97\x02\n" +
	"\bEndpoint\x12\x1d\n" +
	"\n" +
	"service_id\x18\x01 \x01(\tR\tserviceId\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12H\n" +
	"\bmetadata\x18\x03 \x03(\v2,.truenow.controlplane.Endpoint.MetadataEntryR\bmetadata\x12\x16\n" +
	"\x06weight\x18\x04 \x01(\x01R\x06weight\x12;\n" +
	"\x06health\x18\x05 \x01(\v2#.truenow.controlplane.ServiceHealthR\x06health\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"e\n" +
	"\x10GetConfigRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12!\n" +
	"\fservice_type\x18\x02 \x01(\tR\vserviceType\x12\x10\n" +
	"\x03key\x18\x03 \x01(\tR\x03key\"\x88\x02\n" +
	"\x11GetConfigResponse\x12K\n" +
	"\x06config\x18\x01 \x03(\v23.truenow.controlplane.GetConfigResponse.ConfigEntryR\x06config\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x05R\aversion\x129\n" +
	"\n" +
	"updated_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x1aQ\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12,\n" +
	"\x05value\x18\x02 \x01(\v2\x16.google.protobuf.ValueR\x05value:\x028\x01\"\x90\x02\n" +
	"\x13UpdateConfigRequest\x12\x1c\n" +
	"\tnamespace\x18\x01 \x01(\tR\tnamespace\x12!\n" +
	"\fservice_type\x18\x02 \x01(\tR\vserviceType\x12M\n" +
	"\x06config\x18\x03 \x03(\v25.truenow.controlplane.UpdateConfigRequest.ConfigEntryR\x06config\x12\x16\n" +
	"\x06reason\x18\x04 \x01(\tR\x06reason\x1aQ\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12,\n" +
	"\x05value\x18\x02 \x01(\v2\x16.google.protobuf.ValueR\x05value:\x028\x01\"k\n" +
	"\x14UpdateConfigResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1f\n" +
	"\vnew_version\x18\x02 \x01(\x05R\n" +
	"newVersion\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"\xa8\x01\n" +
	"\x12GetAuditLogRequest\x12\x1d\n" +
	"\n" +
	"start_time\x18\x01 \x01(\x03R\tstartTime\x12\x19\n" +
	"\bend_time\x18\x02 \x01(\x03R\aendTime\x12\x12\n" +
	"\x04user\x18\x03 \x01(\tR\x04user\x12\x16\n" +
	"\x06action\x18\x04 \x01(\tR\x06action\x12\x14\n" +
	"\x05limit\x18\x05 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x06 \x01(\x05R\x06offset\"p\n" +
	"\x13GetAuditLogResponse\x128\n" +
	"\x06events\x18\x01 \x03(\v2 .truenow.controlplane.AuditEventR\x06events\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"\x8c\x03\n" +
	"\n" +
	"AuditEvent\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12\x12\n" +
	"\x04user\x18\x02 \x01(\tR\x04user\x12\x16\n" +
	"\x06action\x18\x03 \x01(\tR\x06action\x12\x1a\n" +
	"\bresource\x18\x04 \x01(\tR\bresource\x12G\n" +
	"\adetails\x18\x05 \x03(\v2-.truenow.controlplane.AuditEvent.DetailsEntryR\adetails\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x06 \x01(\tR\tipAddress\x128\n" +
	"\ttimestamp\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x18\n" +
	"\asuccess\x18\b \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\t \x01(\tR\ferrorMessage\x1a:\n" +
	"\fDetailsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"Q\n" +
	"\x17RecordAuditEventRequest\x126\n" +
	"\x05event\x18\x01 \x01(\v2 .truenow.controlplane.AuditEventR\x05event\"O\n" +
	"\x18RecordAuditEventResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x19\n" +
	"\bevent_id\x18\x02 \x01(\tR\aeventId*x\n" +
	"\tFieldType\x12\n" +
	"\n" +
	"\x06STRING\x10\x00\x12\t\n" +
	"\x05INT32\x10\x01\x12\t\n" +
	"\x05INT64\x10\x02\x12\v\n" +
	"\aFLOAT32\x10\x03\x12\v\n" +
	"\aFLOAT64\x10\x04\x12\v\n" +
	"\aBOOLEAN\x10\x05\x12\r\n" +
	"\tTIMESTAMP\x10\x06\x12\t\n" +
	"\x05BYTES\x10\a\x12\b\n" +
	"\x04JSON\x10\b*:\n" +
	"\x0fCompressionType\x12\b\n" +
	"\x04NONE\x10\x00\x12\n" +
	"\n" +
	"\x06SNAPPY\x10\x01\x12\a\n" +
	"\x03LZ4\x10\x02\x12\b\n" +
	"\x04ZSTD\x10\x03*8\n" +
	"\n" +
	"EpochState\x12\n" +
	"\n" +
	"\x06ACTIVE\x10\x00\x12\x11\n" +
	"\rTRANSITIONING\x10\x01\x12\v\n" +
	"\aEXPIRED\x10\x02*E\n" +
	"\fHealthStatus\x12\v\n" +
	"\aHEALTHY\x10\x00\x12\f\n" +
	"\bDEGRADED\x10\x01\x12\r\n" +
	"\tUNHEALTHY\x10\x02\x12\v\n" +
	"\aUNKNOWN\x10\x032\xe4\f\n" +
	"\x13ControlPlaneService\x12e\n" +
	"\fCreateSchema\x12).truenow.controlplane.CreateSchemaRequest\x1a*.truenow.controlplane.CreateSchemaResponse\x12\\\n" +
	"\tGetSchema\x12&.truenow.controlplane.GetSchemaRequest\x1a'.truenow.controlplane.GetSchemaResponse\x12e\n" +
	"\fUpdateSchema\x12).truenow.controlplane.UpdateSchemaRequest\x1a*.truenow.controlplane.UpdateSchemaResponse\x12b\n" +
	"\vListSchemas\x12(.truenow.controlplane.ListSchemasRequest\x1a).truenow.controlplane.ListSchemasResponse\x12n\n" +
	"\x0fGetCurrentEpoch\x12,.truenow.controlplane.GetCurrentEpochRequest\x1a-.truenow.controlplane.GetCurrentEpochResponse\x12\x83\x01\n" +
	"\x16ProposeEpochTransition\x123.truenow.controlplane.ProposeEpochTransitionRequest\x1a4.truenow.controlplane.ProposeEpochTransitionResponse\x12b\n" +
	"\vCommitEpoch\x12(.truenow.controlplane.CommitEpochRequest\x1a).truenow.controlplane.CommitEpochResponse\x12n\n" +
	"\x0fRegisterService\x12,.truenow.controlplane.RegisterServiceRequest\x1a-.truenow.controlplane.RegisterServiceResponse\x12t\n" +
	"\x11UnregisterService\x12..truenow.controlplane.UnregisterServiceRequest\x1a/.truenow.controlplane.UnregisterServiceResponse\x12e\n" +
	"\fListServices\x12).truenow.controlplane.ListServicesRequest\x1a*.truenow.controlplane.ListServicesResponse\x12z\n" +
	"\x13GetServiceEndpoints\x120.truenow.controlplane.GetServiceEndpointsRequest\x1a1.truenow.controlplane.GetServiceEndpointsResponse\x12\\\n" +
	"\tGetConfig\x12&.truenow.controlplane.GetConfigRequest\x1a'.truenow.controlplane.GetConfigResponse\x12e\n" +
	"\fUpdateConfig\x12).truenow.controlplane.UpdateConfigRequest\x1a*.truenow.controlplane.UpdateConfigResponse\x12b\n" +
	"\vGetAuditLog\x12(.truenow.controlplane.GetAuditLogRequest\x1a).truenow.controlplane.GetAuditLogResponse\x12q\n" +
	"\x10RecordAuditEvent\x12-.truenow.controlplane.RecordAuditEventRequest\x1a..truenow.controlplane.RecordAuditEventResponseBBZ@github.com/Milad-Afdasta/TrueNow/proto/controlplane;controlplaneb\x06proto3"

var (
	file_control_plane_proto_rawDescOnce sync.Once
	file_control_plane_proto_rawDescData []byte
)

func file_control_plane_proto_rawDescGZIP() []byte {
	file_control_plane_proto_rawDescOnce.Do(func() {
		file_control_plane_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_control_plane_proto_rawDesc), len(file_control_plane_proto_rawDesc)))
	})
	return file_control_plane_proto_rawDescData
}

var file_control_plane_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_control_plane_proto_msgTypes = make([]protoimpl.MessageInfo, 55)
var file_control_plane_proto_goTypes = []any{
	(FieldType)(0),                         // 0: truenow.controlplane.FieldType
	(CompressionType)(0),                   // 1: truenow.controlplane.CompressionType
	(EpochState)(0),                        // 2: truenow.controlplane.EpochState
	(HealthStatus)(0),                      // 3: truenow.controlplane.HealthStatus
	(*CreateSchemaRequest)(nil),            // 4: truenow.controlplane.CreateSchemaRequest
	(*FieldDefinition)(nil),                // 5: truenow.controlplane.FieldDefinition
	(*SchemaOptions)(nil),                  // 6: truenow.controlplane.SchemaOptions
	(*CreateSchemaResponse)(nil),           // 7: truenow.controlplane.CreateSchemaResponse
	(*GetSchemaRequest)(nil),               // 8: truenow.controlplane.GetSchemaRequest
	(*GetSchemaResponse)(nil),              // 9: truenow.controlplane.GetSchemaResponse
	(*Schema)(nil),                         // 10: truenow.controlplane.Schema
	(*UpdateSchemaRequest)(nil),            // 11: truenow.controlplane.UpdateSchemaRequest
	(*UpdateSchemaResponse)(nil),           // 12: truenow.controlplane.UpdateSchemaResponse
	(*ListSchemasRequest)(nil),             // 13: truenow.controlplane.ListSchemasRequest
	(*ListSchemasResponse)(nil),            // 14: truenow.controlplane.ListSchemasResponse
	(*GetCurrentEpochRequest)(nil),         // 15: truenow.controlplane.GetCurrentEpochRequest
	(*GetCurrentEpochResponse)(nil),        // 16: truenow.controlplane.GetCurrentEpochResponse
	(*Epoch)(nil),                          // 17: truenow.controlplane.Epoch
	(*ServiceConfiguration)(nil),           // 18: truenow.controlplane.ServiceConfiguration
	(*ShardAssignment)(nil),                // 19: truenow.controlplane.ShardAssignment
	(*ProposeEpochTransitionRequest)(nil),  // 20: truenow.controlplane.ProposeEpochTransitionRequest
	(*ProposeEpochTransitionResponse)(nil), // 21: truenow.controlplane.ProposeEpochTransitionResponse
	(*CommitEpochRequest)(nil),             // 22: truenow.controlplane.CommitEpochRequest
	(*CommitEpochResponse)(nil),            // 23: truenow.controlplane.CommitEpochResponse
	(*RegisterServiceRequest)(nil),         // 24: truenow.controlplane.RegisterServiceRequest
	(*ServiceHealth)(nil),                  // 25: truenow.controlplane.ServiceHealth
	(*RegisterServiceResponse)(nil),        // 26: truenow.controlplane.RegisterServiceResponse
	(*UnregisterServiceRequest)(nil),       // 27: truenow.controlplane.UnregisterServiceRequest
	(*UnregisterServiceResponse)(nil),      // 28: truenow.controlplane.UnregisterServiceResponse
	(*ListServicesRequest)(nil),            // 29: truenow.controlplane.ListServicesRequest
	(*ListServicesResponse)(nil),           // 30: truenow.controlplane.ListServicesResponse
	(*ServiceInstance)(nil),                // 31: truenow.controlplane.ServiceInstance
	(*GetServiceEndpointsRequest)(nil),     // 32: truenow.controlplane.GetServiceEndpointsRequest
	(*GetServiceEndpointsResponse)(nil),    // 33: truenow.controlplane.GetServiceEndpointsResponse
	(*Endpoint)(nil),                       // 34: truenow.controlplane.Endpoint
	(*GetConfigRequest)(nil),               // 35: truenow.controlplane.GetConfigRequest
	(*GetConfigResponse)(nil),              // 36: truenow.controlplane.GetConfigResponse
	(*UpdateConfigRequest)(nil),            // 37: truenow.controlplane.UpdateConfigRequest
	(*UpdateConfigResponse)(nil),           // 38: truenow.controlplane.UpdateConfigResponse
	(*GetAuditLogRequest)(nil),             // 39: truenow.controlplane.GetAuditLogRequest
	(*GetAuditLogResponse)(nil),            // 40: truenow.controlplane.GetAuditLogResponse
	(*AuditEvent)(nil),                     // 41: truenow.controlplane.AuditEvent
	(*RecordAuditEventRequest)(nil),        // 42: truenow.controlplane.RecordAuditEventRequest
	(*RecordAuditEventResponse)(nil),       // 43: truenow.controlplane.RecordAuditEventResponse
	nil,                                    // 44: truenow.controlplane.CreateSchemaRequest.PropertiesEntry
	nil,                                    // 45: truenow.controlplane.FieldDefinition.PropertiesEntry
	nil,                                    // 46: truenow.controlplane.Schema.PropertiesEntry
	nil,                                    // 47: truenow.controlplane.UpdateSchemaRequest.PropertiesEntry
	nil,                                    // 48: truenow.controlplane.Epoch.ServicesEntry
	nil,                                    // 49: truenow.controlplane.Epoch.ShardAssignmentsEntry
	nil,                                    // 50: truenow.controlplane.ServiceConfiguration.ConfigEntry
	nil,                                    // 51: truenow.controlplane.ProposeEpochTransitionRequest.NewServicesEntry
	nil,                                    // 52: truenow.controlplane.ProposeEpochTransitionRequest.NewShardAssignmentsEntry
	nil,                                    // 53: truenow.controlplane.RegisterServiceRequest.MetadataEntry
	nil,                                    // 54: truenow.controlplane.ServiceInstance.MetadataEntry
	nil,                                    // 55: truenow.controlplane.Endpoint.MetadataEntry
	nil,                                    // 56: truenow.controlplane.GetConfigResponse.ConfigEntry
	nil,                                    // 57: truenow.controlplane.UpdateConfigRequest.ConfigEntry
	nil,                                    // 58: truenow.controlplane.AuditEvent.DetailsEntry
	(*structpb.Value)(nil),                 // 59: google.protobuf.Value
	(*timestamppb.Timestamp)(nil),          // 60: google.protobuf.Timestamp
}
var file_control_plane_proto_depIdxs = []int32{
	5,  // 0: truenow.controlplane.CreateSchemaRequest.fields:type_name -> truenow.controlplane.FieldDefinition
	44, // 1: truenow.controlplane.CreateSchemaRequest.properties:type_name -> truenow.controlplane.CreateSchemaRequest.PropertiesEntry
	6,  // 2: truenow.controlplane.CreateSchemaRequest.options:type_name -> truenow.controlplane.SchemaOptions
	0,  // 3: truenow.controlplane.FieldDefinition.type:type_name -> truenow.controlplane.FieldType
	59, // 4: truenow.controlplane.FieldDefinition.default_value:type_name -> google.protobuf.Value
	45, // 5: truenow.controlplane.FieldDefinition.properties:type_name -> truenow.controlplane.FieldDefinition.PropertiesEntry
	1,  // 6: truenow.controlplane.SchemaOptions.compression:type_name -> truenow.controlplane.CompressionType
	10, // 7: truenow.controlplane.GetSchemaResponse.schema:type_name -> truenow.controlplane.Schema
	5,  // 8: truenow.controlplane.Schema.fields:type_name -> truenow.controlplane.FieldDefinition
	46, // 9: truenow.controlplane.Schema.properties:type_name -> truenow.controlplane.Schema.PropertiesEntry
	6,  // 10: truenow.controlplane.Schema.options:type_name -> truenow.controlplane.SchemaOptions
	60, // 11: truenow.controlplane.Schema.created_at:type_name -> google.protobuf.Timestamp
	60, // 12: truenow.controlplane.Schema.updated_at:type_name -> google.protobuf.Timestamp
	5,  // 13: truenow.controlplane.UpdateSchemaRequest.fields:type_name -> truenow.controlplane.FieldDefinition
	47, // 14: truenow.controlplane.UpdateSchemaRequest.properties:type_name -> truenow.controlplane.UpdateSchemaRequest.PropertiesEntry
	10, // 15: truenow.controlplane.ListSchemasResponse.schemas:type_name -> truenow.controlplane.Schema
	17, // 16: truenow.controlplane.GetCurrentEpochResponse.epoch:type_name -> truenow.controlplane.Epoch
	2,  // 17: truenow.controlplane.Epoch.state:type_name -> truenow.controlplane.EpochState
	48, // 18: truenow.controlplane.Epoch.services:type_name -> truenow.controlplane.Epoch.ServicesEntry
	49, // 19: truenow.controlplane.Epoch.shard_assignments:type_name -> truenow.controlplane.Epoch.ShardAssignmentsEntry
	60, // 20: truenow.controlplane.Epoch.started_at:type_name -> google.protobuf.Timestamp
	60, // 21: truenow.controlplane.Epoch.expires_at:type_name -> google.protobuf.Timestamp
	50, // 22: truenow.controlplane.ServiceConfiguration.config:type_name -> truenow.controlplane.ServiceConfiguration.ConfigEntry
	51, // 23: truenow.controlplane.ProposeEpochTransitionRequest.new_services:type_name -> truenow.controlplane.ProposeEpochTransitionRequest.NewServicesEntry
	52, // 24: truenow.controlplane.ProposeEpochTransitionRequest.new_shard_assignments:type_name -> truenow.controlplane.ProposeEpochTransitionRequest.NewShardAssignmentsEntry
	60, // 25: truenow.controlplane.CommitEpochResponse.committed_at:type_name -> google.protobuf.Timestamp
	53, // 26: truenow.controlplane.RegisterServiceRequest.metadata:type_name -> truenow.controlplane.RegisterServiceRequest.MetadataEntry
	25, // 27: truenow.controlplane.RegisterServiceRequest.health:type_name -> truenow.controlplane.ServiceHealth
	3,  // 28: truenow.controlplane.ServiceHealth.status:type_name -> truenow.controlplane.HealthStatus
	60, // 29: truenow.controlplane.ServiceHealth.last_check:type_name -> google.protobuf.Timestamp
	3,  // 30: truenow.controlplane.ListServicesRequest.health_filter:type_name -> truenow.controlplane.HealthStatus
	31, // 31: truenow.controlplane.ListServicesResponse.services:type_name -> truenow.controlplane.ServiceInstance
	54, // 32: truenow.controlplane.ServiceInstance.metadata:type_name -> truenow.controlplane.ServiceInstance.MetadataEntry
	25, // 33: truenow.controlplane.ServiceInstance.health:type_name -> truenow.controlplane.ServiceHealth
	60, // 34: truenow.controlplane.ServiceInstance.registered_at:type_name -> google.protobuf.Timestamp
	60, // 35: truenow.controlplane.ServiceInstance.last_heartbeat:type_name -> google.protobuf.Timestamp
	34, // 36: truenow.controlplane.GetServiceEndpointsResponse.endpoints:type_name -> truenow.controlplane.Endpoint
	55, // 37: truenow.controlplane.Endpoint.metadata:type_name -> truenow.controlplane.Endpoint.MetadataEntry
	25, // 38: truenow.controlplane.Endpoint.health:type_name -> truenow.controlplane.ServiceHealth
	56, // 39: truenow.controlplane.GetConfigResponse.config:type_name -> truenow.controlplane.GetConfigResponse.ConfigEntry
	60, // 40: truenow.controlplane.GetConfigResponse.updated_at:type_name -> google.protobuf.Timestamp
	57, // 41: truenow.controlplane.UpdateConfigRequest.config:type_name -> truenow.controlplane.UpdateConfigRequest.ConfigEntry
	41, // 42: truenow.controlplane.GetAuditLogResponse.events:type_name -> truenow.controlplane.AuditEvent
	58, // 43: truenow.controlplane.AuditEvent.details:type_name -> truenow.controlplane.AuditEvent.DetailsEntry
	60, // 44: truenow.controlplane.AuditEvent.timestamp:type_name -> google.protobuf.Timestamp
	41, // 45: truenow.controlplane.RecordAuditEventRequest.event:type_name -> truenow.controlplane.AuditEvent
	18, // 46: truenow.controlplane.Epoch.ServicesEntry.value:type_name -> truenow.controlplane.ServiceConfiguration
	19, // 47: truenow.controlplane.Epoch.ShardAssignmentsEntry.value:type_name -> truenow.controlplane.ShardAssignment
	18, // 48: truenow.controlplane.ProposeEpochTransitionRequest.NewServicesEntry.value:type_name -> truenow.controlplane.ServiceConfiguration
	19, // 49: truenow.controlplane.ProposeEpochTransitionRequest.NewShardAssignmentsEntry.value:type_name -> truenow.controlplane.ShardAssignment
	59, // 50: truenow.controlplane.GetConfigResponse.ConfigEntry.value:type_name -> google.protobuf.Value
	59, // 51: truenow.controlplane.UpdateConfigRequest.ConfigEntry.value:type_name -> google.protobuf.Value
	4,  // 52: truenow.controlplane.ControlPlaneService.CreateSchema:input_type -> truenow.controlplane.CreateSchemaRequest
	8,  // 53: truenow.controlplane.ControlPlaneService.GetSchema:input_type -> truenow.controlplane.GetSchemaRequest
	11, // 54: truenow.controlplane.ControlPlaneService.UpdateSchema:input_type -> truenow.controlplane.UpdateSchemaRequest
	13, // 55: truenow.controlplane.ControlPlaneService.ListSchemas:input_type -> truenow.controlplane.ListSchemasRequest
	15, // 56: truenow.controlplane.ControlPlaneService.GetCurrentEpoch:input_type -> truenow.controlplane.GetCurrentEpochRequest
	20, // 57: truenow.controlplane.ControlPlaneService.ProposeEpochTransition:input_type -> truenow.controlplane.ProposeEpochTransitionRequest
	22, // 58: truenow.controlplane.ControlPlaneService.CommitEpoch:input_type -> truenow.controlplane.CommitEpochRequest
	24, // 59: truenow.controlplane.ControlPlaneService.RegisterService:input_type -> truenow.controlplane.RegisterServiceRequest
	27, // 60: truenow.controlplane.ControlPlaneService.UnregisterService:input_type -> truenow.controlplane.UnregisterServiceRequest
	29, // 61: truenow.controlplane.ControlPlaneService.ListServices:input_type -> truenow.controlplane.ListServicesRequest
	32, // 62: truenow.controlplane.ControlPlaneService.GetServiceEndpoints:input_type -> truenow.controlplane.GetServiceEndpointsRequest
	35, // 63: truenow.controlplane.ControlPlaneService.GetConfig:input_type -> truenow.controlplane.GetConfigRequest
	37, // 64: truenow.controlplane.ControlPlaneService.UpdateConfig:input_type -> truenow.controlplane.UpdateConfigRequest
	39, // 65: truenow.controlplane.ControlPlaneService.GetAuditLog:input_type -> truenow.controlplane.GetAuditLogRequest
	42, // 66: truenow.controlplane.ControlPlaneService.RecordAuditEvent:input_type -> truenow.controlplane.RecordAuditEventRequest
	7,  // 67: truenow.controlplane.ControlPlaneService.CreateSchema:output_type -> truenow.controlplane.CreateSchemaResponse
	9,  // 68: truenow.controlplane.ControlPlaneService.GetSchema:output_type -> truenow.controlplane.GetSchemaResponse
	12, // 69: truenow.controlplane.ControlPlaneService.UpdateSchema:output_type -> truenow.controlplane.UpdateSchemaResponse
	14, // 70: truenow.controlplane.ControlPlaneService.ListSchemas:output_type -> truenow.controlplane.ListSchemasResponse
	16, // 71: truenow.controlplane.ControlPlaneService.GetCurrentEpoch:output_type -> truenow.controlplane.GetCurrentEpochResponse
	21, // 72: truenow.controlplane.ControlPlaneService.ProposeEpochTransition:output_type -> truenow.controlplane.ProposeEpochTransitionResponse
	23, // 73: truenow.controlplane.ControlPlaneService.CommitEpoch:output_type -> truenow.controlplane.CommitEpochResponse
	26, // 74: truenow.controlplane.ControlPlaneService.RegisterService:output_type -> truenow.controlplane.RegisterServiceResponse
	28, // 75: truenow.controlplane.ControlPlaneService.UnregisterService:output_type -> truenow.controlplane.UnregisterServiceResponse
	30, // 76: truenow.controlplane.ControlPlaneService.ListServices:output_type -> truenow.controlplane.ListServicesResponse
	33, // 77: truenow.controlplane.ControlPlaneService.GetServiceEndpoints:output_type -> truenow.controlplane.GetServiceEndpointsResponse
	36, // 78: truenow.controlplane.ControlPlaneService.GetConfig:output_type -> truenow.controlplane.GetConfigResponse
	38, // 79: truenow.controlplane.ControlPlaneService.UpdateConfig:output_type -> truenow.controlplane.UpdateConfigResponse
	40, // 80: truenow.controlplane.ControlPlaneService.GetAuditLog:output_type -> truenow.controlplane.GetAuditLogResponse
	43, // 81: truenow.controlplane.ControlPlaneService.RecordAuditEvent:output_type -> truenow.controlplane.RecordAuditEventResponse
	67, // [67:82] is the sub-list for method output_type
	52, // [52:67] is the sub-list for method input_type
	52, // [52:52] is the sub-list for extension type_name
	52, // [52:52] is the sub-list for extension extendee
	0,  // [0:52] is the sub-list for field type_name
}

func init() { file_control_plane_proto_init() }
func file_control_plane_proto_init() {
	if File_control_plane_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_control_plane_proto_rawDesc), len(file_control_plane_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   55,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_control_plane_proto_goTypes,
		DependencyIndexes: file_control_plane_proto_depIdxs,
		EnumInfos:         file_control_plane_proto_enumTypes,
		MessageInfos:      file_control_plane_proto_msgTypes,
	}.Build()
	File_control_plane_proto = out.File
	file_control_plane_proto_goTypes = nil
	file_control_plane_proto_depIdxs = nil
}
